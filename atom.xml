<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>姚永坤的小窝</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-28T06:43:45.866Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>姚永坤</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库实验五、六</title>
    <link href="http://example.com/2021/04/28/Database-experiment-4/"/>
    <id>http://example.com/2021/04/28/Database-experiment-4/</id>
    <published>2021-04-28T03:10:44.000Z</published>
    <updated>2021-04-28T06:43:45.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验类型"><a href="#实验类型" class="headerlink" title="实验类型"></a>实验类型</h1><p>验证型实验</p><h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ul><li>了解数据库恢复技术的原理</li><li>了解oracle各类故障的数据恢复方法</li><li>了解oracle的物理备份</li><li>掌握oracle数据库逻辑备份方法</li><li>掌握oracle数据库恢复的方法</li><li>学会使用exp备份数据库、使用imp恢复数据库</li><li>了解flashback 的使用</li><li>学会使用PLSQL/developer工具完成导入导出</li><li>理解数据库的安全性保护</li><li>掌握ORACLE中有关用户创建的方法</li><li>理解数据库存取控制机制</li><li>熟练掌握PL-SQL的数据控制语言，能通过自主存取控制进行权限管理</li><li>熟悉用户资源文件的使用</li><li>熟悉ORACLE中角色管理</li><li>熟悉视图机制在自主存取控制上的应用</li></ul><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><ol><li>查看归档模式</li><li>使用exp导出数据库</li><li>使用imp导入数据库</li><li>使用flashback 闪回表</li><li>使用PLSQL/developer工具完成导出</li><li>使用PLSQL/developer工具完成导入</li></ol><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="实验五"><a href="#实验五" class="headerlink" title="实验五"></a>实验五</h2><ol><li>查看系统归档模式。（在SQLPLUS中）<br>SQL&gt; archive log list。<br>对各参数值进行解释。</li><li>热备份和冷备份，分别使用什么归档模式？</li><li>如何对WINDOWS平台服务器中的ORCL数据库进行冷备份？说明方法。</li><li>客户端可以使用RMAN进行热备份吗？</li><li>逻辑备份<br>（1）导出自己表空间中的“预约”表<br>在运行中输入：exp 用户名/密码@orcl<br>按照提示进行导出<br>（2）删除自己表空间中的“预约”表<br>（3）进行导入数据库操作<br>在运行中输入：IMP 用户名/密码@orcl<br>按照提示进行导入<br>（4）查询导入的“预约”表中的信息。<br>（5）导出数据库（以全库方式导出）。</li></ol><ul><li>必须是DBA才能执行完整数据库或表空间导出操作。</li></ul><ol start="6"><li>使用Flashback<br>（1）设置行可移动<br>SQL&gt;ALTER TABLE 读者 ENABLE   ROW  MOVEMENT<br>（2）在读者表中添加多条记录（或者删除没有借书的读者记录）。<br>（3）闪回到改变前（TO_ TIMESTAMP函数完成对非时间戳类型数据的转换）<br>SQL&gt;FLASHBACK TABLE   读者 TO TIMESTAMP   TO_ TIMESTAMP(….)</li><li>使用PLSQL/developer 来完成SQL导出<br>（1）打开PLSQL/developer，选择菜单“工具“导出表<br>（2）点击你要导出的表，然后选择标签SQL 插入<br>（3）选中复选框创建表，浏览或者输入输出文件，然后点击导出<br>（4）在你输入的目录下找到你的导出文件（SQL 文件）<br>（5）依次导出你账户下所有用户自定义表。<br>（6）删除自己表空间中的“预约”表<br>（7）通过“工具“导入表，利用SQL插入导入数据库预约表。<br>（8）查询导入的预约表，检查导出是否正确。</li><li>使用PLSQL/developer 来完成PLSQL/developer方式导出<br>（1）打开PLSQL/developer，选择菜单“工具“导出表<br>（2）点击你要导出的表，然后选择标签PLSQL/developer<br>（3）浏览或者输入输出文件，然后点击导出。<br>（4）在你输入的目录下找到你的导出文件。<br>（5）依次导出你账户下所有用户自定义表。<br>（6）删除自己表空间中的“预约”表<br>（7）通过“工具“导出表，PLSQL/developer方式导入数据库预约表。<br>（8）查询导入的预约表，检查导出是否正确。</li></ol><h2 id="实验六"><a href="#实验六" class="headerlink" title="实验六"></a>实验六</h2><ol><li>同学之间相互授权访问对方“读者”表并能进行查询。</li><li>以SYS登录数据库 为你的账号增加系统角色DBA.</li><li>重新以自己的账号登录，创建一个数据库用户：账号_USER1（注：账号即学生登录数据库账号：S2009XXXX）该用户拥有所有CONNECT, RESOURCE，DBA系统角色权限。然后以该用户登录，查看该用户的所有系统权限。</li><li>建立角色：账号_OPER,该角色拥有调用存储过程借书、还书、预约的权限，以及查询读者，书目，图书，借阅以及预约表的权限。<br>（注：执行存储过程的授权语句<br>Grant execute on procedure_name  to user/role）</li><li>创建一个数据库用户：账号_USER2（注：账号即：S2009XXXX）<br>为该用户授权角色：账户_OPER。以该用户登录，完成借书功能。</li><li>建立视图VIEW_READER, 该视图包含书目（ISBN, 书名，作者，出版单位，图书分类名称）（注：所有属性来自关系书目和图书分类）</li><li>创建一个数据库用户：账号_USER3（注：账号即：S2009XXXX）<br>该用户具有对视图VIEW_READER查询的权限。创建一个概要文件，如果 账号_USER3连续3次登录失败，则锁定该账户，10天后该账户自动解锁。以该用户登录进行权限测试。</li></ol><h1 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h1><ol><li>查看系统归档模式。（在SQLPLUS中）SQL&gt; archive log list。对各参数值进行解释。<br>使用SYS登录，由于是超级管理员所以要使用： “口令+ as sysdba”登录</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic1.png" class title="# tu"><p>输入archive log list</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic2.png" class title="# tu"><ol start="2"><li>热备份和冷备份，分别使用什么归档模式？<br>热备份针对归档模式的数据库，在数据库仍旧处于工作状态时进行备份。而冷备份是指在数据库关闭后，进行备份，适用于所有模式的数据库，热备份的优点在于当备份时，数据库仍旧可以被使用并且可以将数据库恢复到任意一个时间点。冷备份的优点在于他的备份和回复操作相当简单，并且由于冷备份的数据可以工作在非归档模式下，数据库性能会比归档模式稍好。</li><li>如何对WINDOWS平台服务器中的ORCL数据库进行冷备份？说明方法。</li></ol><p>1)正常关闭数据库<br>2)备份所有重要的文件到备份目录（数据文件、控制文件、重做日志文件等）<br>3)完成备份后启动数据库<br>4. 客户端可以使用RMAN进行热备份吗？ 可以<br>5. 逻辑备份<br>（1）导出自己表空间中的“预约”表在运行中输入：exp 用户名/密码@orcl 按照提示进行导出</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic3.png" class title="# tu"><p>（2）删除自己表空间中的“预约”表</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic4.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic5.png" class title="# tu"><p>（3）进行导入数据库操作在运行中输入：IMP 用户名/密码@orcl，按照提示进行导入</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic6.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic7.png" class title="# tu"><p>（4）查询导入的“预约”表中的信息。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic8.png" class title="# tu"><p>（5）导出数据库（以全库方式导出）。<br>exp S5120188039/yyk1776572104@orcl FULL=Y</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic9.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic10.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic11.png" class title="# tu"><p>6、使用Flashback<br>（1）设置行可移动<br>SQL&gt;ALTER TABLE 读者 ENABLE ROW MOVEMENT</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic12.png" class title="# tu"><p>（2）在读者表中添加多条记录（或者删除没有借书的读者记录）。<br>插入数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 读者 <span class="keyword">VALUES</span>(<span class="string">&#x27;20181452&#x27;</span>,<span class="string">&#x27;胡晋源&#x27;</span>,<span class="string">&#x27;四川绵阳西科大计算机学院&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 读者 <span class="keyword">VALUES</span>(<span class="string">&#x27;20186666&#x27;</span>,<span class="string">&#x27;吕硕&#x27;</span>,<span class="string">&#x27;四川绵阳西科大计算机学院&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 读者 <span class="keyword">VALUES</span>(<span class="string">&#x27;20188039&#x27;</span>,<span class="string">&#x27;姚永坤&#x27;</span>,<span class="string">&#x27;四川绵阳西科大计算机学院&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>); </span><br></pre></td></tr></table></figure><p>（3）闪回到改变前（TO_ TIMESTAMP函数完成对非时间戳类型数据的转换）<br>SQL&gt;FLASHBACK TABLE 读者 TO TIMESTAMP TO_ TIMESTAMP(….)<br>代码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLASHBACK <span class="keyword">TABLE</span> 读者 <span class="keyword">TO</span> <span class="type">TIMESTAMP</span> TO_TIMESTAMP(<span class="string">&#x27;2020/11/15 16:30:00&#x27;</span>,<span class="string">&#x27;YYYY/MM/DD HH24:MI:SS&#x27;</span>);</span><br></pre></td></tr></table></figure><p>7、使用PLSQL/developer 来完成SQL导出<br>（1）打开PLSQL/developer，选择菜单“工具”导出表</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic13.png" class title="# tu"><p>（2）点击你要导出的表，然后选择标签SQL插入</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic14.png" class title="# tu"><p>（3）选中复选框创建表，浏览或者输入输出文件，然后点击导出</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic15.png" class title="# tu"><p>（4）在你输入的目录下找到你的导出文件（SQL 文件）<br>（5）依次导出你账户下所有用户自定义表。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic16.png" class title="# tu"><p>（6）删除自己表空间中的“预约”表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 预约;</span><br></pre></td></tr></table></figure><p>（7）通过“工具“导入表，利用SQL插入导入数据库预约表。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic17.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic18.png" class title="# tu"><p>（8）查询导入的预约表，检查导出是否正确。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic19.png" class title="# tu"><p>8、使用PLSQL/developer 来完成PLSQL/developer方式导出<br>（1）打开PLSQL/developer，选择菜单“工具“导出表<br>（2）点击你要导出的表，然后选择标签PLSQL/developer</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic20.png" class title="# tu"><p>（3）浏览或者输入输出文件，然后点击导出。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic21.png" class title="# tu"><p>（4）在你输入的目录下找到你的导出文件。<br>（5）依次导出你账户下所有用户自定义表。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic22.png" class title="# tu"><p>（6）删除自己表空间中的“预约”表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 预约;</span><br></pre></td></tr></table></figure><p>（7）通过“工具“导出表，PLSQL/developer方式导入数据库预约表。</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic23.png" class title="# tu"><p>（8）查询导入的预约表，检查导出是否正确</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic24.png" class title="# tu"><h2 id="实验六-1"><a href="#实验六-1" class="headerlink" title="实验六"></a>实验六</h2><p>1、同学之间相互授权访问对方“读者”表并能进行查询。<br>2、以SYS登录数据库 为你的账号增加系统角色DBA.</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic25.png" class title="# tu"><p>使用 “GRANT DBA TO + 用户名”给自己的账号增加系统角色DBA：</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic26.png" class title="# tu"><p>3、 重新以自己的账号登录，创建一个数据库用户：账号_USER1（注：账号即学生登录数据库账号：S2009XXXX）该用户拥有所有CONNECT, RESOURCE，DBA系统角色权限。然后以该用户登录，查看该用户的所有系统权限。<br>（1）登录</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic27.png" class title="# tu"><p>（2）使用CREATE USER 用户+_USER1 IDENTIFIED BY ORCL;创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> S5120188039_USER1 IDENTIFIED <span class="keyword">BY</span> ORCL;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic28.png" class title="# tu"><p>（3）使用GRANT CONNECT TO S5120188039_USER1;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> RESOURCE <span class="keyword">TO</span> S5120188039_USER1;</span><br><span class="line"><span class="keyword">GRANT</span> DBA <span class="keyword">TO</span> S5120188039_USER1;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic29.png" class title="# tu"><p>4、 建立角色：账号_OPER,该角色拥有调用存储过程借书、还书、预约的权限，以及查询读者，书目，图书，借阅以及预约表的权限。<br>（注：执行存储过程的授权语句Grant execute on procedure_name  to user/role）<br>（1）创建角色</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> ROLE S5120188039_OPER;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic30.png" class title="# tu"><p>（2）授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">EXECUTE</span> <span class="keyword">ON</span> PROCESSED_借书 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">EXECUTE</span> <span class="keyword">ON</span> PROCESSED_还书 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">EXECUTE</span> <span class="keyword">ON</span> PROCEDURE_预约 <span class="keyword">TO</span> S5120188039_OPER;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic31.png" class title="# tu"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 读者 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 书目 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 图书 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 借阅 <span class="keyword">TO</span> S5120188039_OPER;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 预约 <span class="keyword">TO</span> S5120188039_OPER;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic32.png" class title="# tu"><p>5、创建一个数据库用户：账号_USER2（注：账号即：S2009XXXX）为该用户授权角色：账户_OPER。以该用户登录，完成借书功能。<br>（1）使用CREATE USER 用户+_USER1 IDENTIFIED BY ORCL;创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> S5120188039_USER2 IDENTIFIED <span class="keyword">BY</span> ORCL;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic33.png" class title="# tu"><p>（2）授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> S5120188039_OPER <span class="keyword">TO</span> S5120188039_USER2;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic34.png" class title="# tu"><p>（3）重新登录并且实现借书过程</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic35.png" class title="# tu"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> S5120188039.PROCESSED_借书(<span class="number">20051001</span>,<span class="number">1005050</span>);</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic36.png" class title="# tu"><p>（4）查询结果</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic37.png" class title="# tu"><p>7、 创建一个数据库用户：账号_USER3（注：账号即：S2009XXXX）<br>该用户具有对视图VIEW_READER查询的权限。创建一个概要文件，如果 账号_USER3连续3次登录失败，则锁定该账户，10天后该账户自动解锁。以该用户登录进行权限测试。<br>（1）创建数据库用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> S5120188039_USER3 IDENTIFIED <span class="keyword">BY</span> ORCL;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic38.png" class title="# tu"><p>（2）授权</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CONNECT</span> <span class="keyword">TO</span> S5120188039_USER3;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic39.png" class title="# tu"><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> VIEW_READER <span class="keyword">TO</span> S5120188039_USER3;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic40.png" class title="# tu"><p>（3）创建概要文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROFILE LOCK_USER LIMIT</span><br><span class="line">FAILED_LOGIN_ATTEMPTS <span class="number">3</span></span><br><span class="line">PASSWORD_LOCK_TIME <span class="number">10</span>;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic41.png" class title="# tu"><p>（4）分配概要文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> S5120188039_USER3 PROFILE LOCK_USER;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic42.png" class title="# tu"><p>（5）测试输入错误，锁定用户</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic43.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic44.png" class title="# tu"><p>（6）账户锁定进行解锁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> S5120188039_USER3 ACCOUNT UNLOCK;</span><br></pre></td></tr></table></figure><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic45.png" class title="# tu"><p>（7）再次测试</p><img lazyload src="/images/loading.svg" data-src="/2021/04/28/Database-experiment-4/pic46.png" class title="# tu">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验类型&quot;&gt;&lt;a href=&quot;#实验类型&quot; class=&quot;headerlink&quot; title=&quot;实验类型&quot;&gt;&lt;/a&gt;实验类型&lt;/h1&gt;&lt;p&gt;验证型实验&lt;/p&gt;
&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="Database-experiment" scheme="http://example.com/tags/Database-experiment/"/>
    
  </entry>
  
  <entry>
    <title>数据库实验三、四</title>
    <link href="http://example.com/2021/04/28/Database-experiment-3/"/>
    <id>http://example.com/2021/04/28/Database-experiment-3/</id>
    <published>2021-04-28T03:10:20.000Z</published>
    <updated>2021-04-28T04:53:17.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验类型"><a href="#实验类型" class="headerlink" title="实验类型"></a>实验类型</h1><p>验证型实验</p><h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ul><li>了解存储过程的概念、优点</li><li>熟练掌握创建存储过程的创建方法</li><li>熟练掌握存储过程的调用方法</li></ul><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><ol><li>建立存储过程</li><li>调用存储过程</li></ol><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><ol><li>建立存储过程完成图书管理系统中的借书功能，功能要求：</li></ol><ul><li>借书时要求输入借阅流水号，借书证号，图书编号。（即该存储过程有3个输入参数）</li><li>借书时，借书日期为系统时间。</li><li>图书的是否借出改为‘是’</li></ul><ol start="2"><li>建立存储过程完成图书管理系统中的预约功能。</li></ol><ul><li>预约时要求输入预约流水号，借书证号，ISBN。（即该存储过程有3个输入参数）</li><li>存储过程先检查输入的ISBN版本的图书是否都已借出，如果是则进行预约，否则提示“该书目有可借图书，请查找”。</li><li>预约时间为系统时间。</li></ul><ol start="3"><li>建立存储过程完成图书管理系统中的还书功能。</li></ol><ul><li>还书时要求输入借书证号，图书编号，罚款分类号（即该存储过程有3个输入参数）。</li><li>还书日期为系统时间。</li><li>图书的是否借出改为‘否’。</li></ul><ol><li>通过序列和触发器实现借阅表中借阅流水号字段的自动递增。</li><li>通过序列和触发器实现预约表中预约流水号字段的自动递增</li><li>修改实验三借书功能的存储过程。该存储过程要求：<br>（1）借书时输入借书证号，图书编号。（即该函数有2个输入参数）<br>（2）借书时，借书日期为系统时间。<ul><li>该存储过程主体部分只有insert into语句。</li></ul></li><li>建立与借书存储过程相对应的触发器，当借阅表中加入借阅信息时，该触发器触发，自动修改所借图书的是否借出改为‘是’。</li><li>修改实验三还书功能的存储过程。该存储过程要求：<br>（1）还书时输入借书证号，图书编号。（即该函数有2个输入参数）<br>（2）还书时，还书日期为系统时间。</li></ol><ul><li>该存储过程主体部分只有一条UPDATE语句。</li></ul><ol start="6"><li>建立与还书存储过程相对应的触发器，当借阅表中填入还书日期时，该触发器触发，自动修改所还图书的是否借出为‘否’。</li></ol><h1 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h1><h2 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h2><ol><li>建立存储过程完成图书管理系统中的借书功能，功能要求：</li></ol><ul><li>借书时要求输入借阅流水号，借书证号，图书编号。（即该存储过程有3个输入参数）</li><li>借书时，借书日期为系统时间。</li><li>图书的是否借出改为‘是’</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> Procedure_借书</span><br><span class="line">(</span><br><span class="line">vis_借阅流水号 <span class="keyword">in</span> 借阅.借阅流水号<span class="operator">%</span>type,</span><br><span class="line">vis_借书证号 <span class="keyword">in</span> 借阅.借书证号<span class="operator">%</span>type,</span><br><span class="line">vis_图书编号 <span class="keyword">in</span> 借阅.图书编号<span class="operator">%</span>type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">insert</span> <span class="keyword">into</span> 借阅</span><br><span class="line">  <span class="keyword">values</span>(vis_借阅流水号,vis_借书证号,vis_图书编号,sysdate,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">  update 图书</span><br><span class="line">  <span class="keyword">set</span> 图书.是否借出 <span class="operator">=</span> <span class="string">&#x27;是&#x27;</span></span><br><span class="line">  <span class="keyword">where</span> 图书.图书编号 <span class="operator">=</span> vis_图书编号;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>建立存储过程完成图书管理系统中的预约功能。</li></ol><ul><li>预约时要求输入预约流水号，借书证号，ISBN。（即该存储过程有3个输入参数）</li><li>存储过程先检查输入的ISBN版本的图书是否都已借出，如果是则进行预约，否则提示“该书目有可借图书，请查找”。</li><li>预约时间为系统时间。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> Procedure_预约</span><br><span class="line">(</span><br><span class="line">vis_预约流水号 <span class="keyword">in</span> 预约.预约流水号<span class="operator">%</span>type,</span><br><span class="line">vis_借书证号 <span class="keyword">in</span> 预约.借书证号<span class="operator">%</span>type,</span><br><span class="line">vis_ISBN <span class="keyword">in</span> 预约.ISBN<span class="operator">%</span>type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">vis_数量 number;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">into</span> vis_数量 <span class="keyword">from</span> 图书</span><br><span class="line">  <span class="keyword">where</span> 图书.ISBN<span class="operator">=</span>vis_ISBN</span><br><span class="line">  <span class="keyword">and</span> 图书.是否借出<span class="operator">=</span><span class="string">&#x27;否&#x27;</span>;</span><br><span class="line">  if vis_数量<span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> 预约 <span class="keyword">values</span>(vis_预约流水号,vis_借书证号,vis_ISBN,sysdate);</span><br><span class="line">    <span class="keyword">commit</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    dbms_output.put_line(<span class="string">&#x27;该书目有可借图书，请查找！&#x27;</span>);</span><br><span class="line">  <span class="keyword">end</span> if;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>建立存储过程完成图书管理系统中的还书功能。</li></ol><ul><li>还书时要求输入借书证号，图书编号，罚款分类号（即该存储过程有3个输入参数）。</li><li>还书日期为系统时间。</li><li>图书的是否借出改为‘否’。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> Procedure_还书</span><br><span class="line">(</span><br><span class="line">vis_借书证号 <span class="keyword">in</span> 借阅.借书证号<span class="operator">%</span>type,</span><br><span class="line">vis_图书编号 <span class="keyword">in</span> 借阅.图书编号<span class="operator">%</span>type,</span><br><span class="line">vis_罚款分类号 <span class="keyword">in</span> 借阅.罚款分类号<span class="operator">%</span>type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  update 借阅</span><br><span class="line">  <span class="keyword">set</span> 借阅.归还日期<span class="operator">=</span>sysdate,借阅.罚款分类号<span class="operator">=</span>vis_罚款分类号</span><br><span class="line">  <span class="keyword">where</span> 借阅.借书证号<span class="operator">=</span>vis_借书证号</span><br><span class="line">  <span class="keyword">and</span> 借阅.图书编号<span class="operator">=</span>vis_图书编号;</span><br><span class="line">  update 图书 <span class="keyword">set</span> 图书.是否借出<span class="operator">=</span><span class="string">&#x27;否&#x27;</span></span><br><span class="line">  <span class="keyword">where</span> 图书.图书编号<span class="operator">=</span>vis_图书编号;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h2 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h2><ol><li>通过序列和触发器实现借阅表中借阅流水号字段的自动递增。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence SEQ_序列</span><br><span class="line">minvalue <span class="number">1</span></span><br><span class="line">maxvalue <span class="number">1.0E28</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span></span><br><span class="line">increment <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">cache <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> TR_借阅流水号自增</span><br><span class="line">       before <span class="keyword">insert</span> <span class="keyword">on</span> 借阅</span><br><span class="line">       <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> SEQ_序列.NEXTVAL</span><br><span class="line">  <span class="keyword">into</span> :new.借阅流水号</span><br><span class="line">  <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>通过序列和触发器实现预约表中预约流水号字段的自动递增</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> TR_预约流水号自增</span><br><span class="line">       before <span class="keyword">insert</span> <span class="keyword">on</span> 预约</span><br><span class="line">       <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> SEQ_序列.NEXTVAL</span><br><span class="line">  <span class="keyword">into</span> :new.预约流水号</span><br><span class="line">  <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>3、 修改实验三借书功能的存储过程，该存储过程要求：<br>（1）借书时输入借书证号，图书编号。（即该函数有2个输入参数）<br>（2）借书时，借书日期为系统时间。</p><ul><li>该存储过程主体部分只有insert into语句。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> Processed_借书   </span><br><span class="line">(  </span><br><span class="line">vis_借书证号 <span class="keyword">in</span> 借阅.借书证号<span class="operator">%</span>type,  </span><br><span class="line">vis_图书编号 <span class="keyword">in</span> 借阅.图书编号<span class="operator">%</span>type  </span><br><span class="line">)  </span><br><span class="line"><span class="keyword">as</span> vis_是否借出 图书.是否借出<span class="operator">%</span>type;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> 是否借出 <span class="keyword">into</span> vis_是否借出 <span class="keyword">from</span> 图书 <span class="keyword">where</span> vis_图书编号 <span class="operator">=</span> 图书.图书编号;</span><br><span class="line">  if vis_是否借出<span class="operator">=</span><span class="string">&#x27;是&#x27;</span> <span class="keyword">then</span></span><br><span class="line">   dbms_output.put_line(<span class="string">&#x27;该书已经被借走了！&#x27;</span>);</span><br><span class="line">  <span class="keyword">else</span>  </span><br><span class="line">   <span class="keyword">select</span> 图书.是否借出  </span><br><span class="line">   <span class="keyword">into</span> vis_是否借出  </span><br><span class="line">   <span class="keyword">from</span> 图书  </span><br><span class="line">   <span class="keyword">where</span> 图书.图书编号<span class="operator">=</span>vis_图书编号; </span><br><span class="line">   <span class="keyword">insert</span> <span class="keyword">into</span> 借阅(借书证号,图书编号,借书日期)  </span><br><span class="line">   <span class="keyword">values</span>(vis_借书证号,vis_图书编号,sysdate);</span><br><span class="line">   <span class="keyword">commit</span>;  </span><br><span class="line">  <span class="keyword">end</span> if;   </span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>建立与借书存储过程相对应的触发器，当借阅表中加入借阅信息时，该触发器触发，自动修改所借图书的是否借出改为‘是’。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> TR_借书</span><br><span class="line">       after <span class="keyword">insert</span> <span class="keyword">on</span> 借阅</span><br><span class="line">       <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  update 图书 <span class="keyword">set</span> 是否借出 <span class="operator">=</span> <span class="string">&#x27;是&#x27;</span> <span class="keyword">where</span> 图书编号 <span class="operator">=</span> :new.图书编号;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>5、 修改实验三还书功能的存储过程，该存储过程要求：<br>（1）还书时输入借书证号，图书编号，罚款分类号。（即该函数有3个输入参数）<br>（2）还书时，还书日期为系统时间。</p><ul><li>该存储过程主体部分只有一条UPDATE语句。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> Processed_还书 </span><br><span class="line">(</span><br><span class="line">vis_借书证号 <span class="keyword">in</span> 借阅.借书证号<span class="operator">%</span>type,</span><br><span class="line">vis_图书编号 <span class="keyword">in</span> 借阅.图书编号<span class="operator">%</span>type</span><br><span class="line">)</span><br><span class="line"><span class="keyword">as</span> vis_是否借出 图书.是否借出<span class="operator">%</span>type;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  update 借阅 <span class="keyword">set</span> 借阅.归还日期 <span class="operator">=</span> sysdate()</span><br><span class="line">  <span class="keyword">where</span> 借阅.借书证号 <span class="operator">=</span> vis_借书证号</span><br><span class="line">  <span class="keyword">and</span> 借阅.图书编号 <span class="operator">=</span> vis_图书编号</span><br><span class="line">  <span class="keyword">and</span> 借阅.归还日期 <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>建立与还书存储过程相对应的触发器，当借阅表中填入还书日期时，该触发器触发，自动修改所还图书的是否借出为‘否’。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> TR_还书</span><br><span class="line">after update <span class="keyword">on</span> 借阅</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    update 图书 <span class="keyword">set</span> 是否借出 <span class="operator">=</span> <span class="string">&#x27;否&#x27;</span></span><br><span class="line">    <span class="keyword">where</span> 图书编号 <span class="operator">=</span> :new.图书编号;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验类型&quot;&gt;&lt;a href=&quot;#实验类型&quot; class=&quot;headerlink&quot; title=&quot;实验类型&quot;&gt;&lt;/a&gt;实验类型&lt;/h1&gt;&lt;p&gt;验证型实验&lt;/p&gt;
&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="Database-experiment" scheme="http://example.com/tags/Database-experiment/"/>
    
  </entry>
  
  <entry>
    <title>数据库实验（二）数据查询</title>
    <link href="http://example.com/2021/04/28/Database-experiment-2/"/>
    <id>http://example.com/2021/04/28/Database-experiment-2/</id>
    <published>2021-04-28T02:36:50.000Z</published>
    <updated>2021-04-28T06:44:33.003Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验类型"><a href="#实验类型" class="headerlink" title="实验类型"></a>实验类型</h1><p>验证型实验</p><h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ul><li>掌握查询语句的一般格式；</li><li>熟练掌握单表查询、连接查询、集合查询、统计查询和嵌套查询。</li></ul><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><ul><li>单表查询</li><li>连接查询</li><li>嵌套查询</li><li>集合查询</li></ul><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><ol><li>查询“红楼梦”目前可借的各图书编号，及所属版本信息。（是否借出为‘否‘的图书）</li><li>查找高等教育出版社的所有书目及单价，结果按单价降序排序。</li><li>统计“红楼梦”各版的藏书数量（ISBN不同则版本不同）。</li><li>查询学号“20061234”号借书证借阅未还的图书的信息。</li><li>查询各个出版社的图书最高单价、平均单价。</li><li>要查询借阅了两本和两本以上图书的读者的个人信息。</li><li>查询“王菲”的单位、所借图书的书名和借阅日期。</li><li>查询每类图书的册数和平均单价。</li><li>统计从未借书的读者人数。</li><li>统计参与借书的人数。</li><li>找出所有借书未还的读者的信息及所借图书编号及名称。</li><li>检索书名是以“红”开头的所有图书的书名和作者。</li><li>查询各图书的罚款总数。</li><li>查询借阅及罚款分类信息，如果有罚款则显示借阅信息及罚款名称、罚金，如果没有罚款则罚款名称、罚金显示空（左外连接）</li><li>查询借阅了所有“文学”类书目的读者的姓名、单位。</li></ol><h1 id="实验扩展"><a href="#实验扩展" class="headerlink" title="实验扩展"></a>实验扩展</h1><ol><li><p>在书目关系中新增“出版年份”，并在该属性下添加数据。（使用SQL完成）</p><table><thead><tr><th align="center">ISBN</th><th align="center">书名</th><th align="center">作者</th><th align="center">出版单位</th><th align="center">出版年份</th><th align="center">单价</th><th align="center">图书分类号</th></tr></thead><tbody><tr><td align="center">7040195836</td><td align="center">数据库系统概论</td><td align="center">王珊</td><td align="center">高等教育出版社</td><td align="center">2005</td><td align="center">39.00</td><td align="center">200</td></tr><tr><td align="center">9787508040110</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">人民出版社</td><td align="center">1983</td><td align="center">20.00</td><td align="center">100</td></tr><tr><td align="center">9787506336239</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">作家出版社</td><td align="center">2008</td><td align="center">34.30</td><td align="center">100</td></tr><tr><td align="center">9787010073750</td><td align="center">心学之路</td><td align="center">张立文</td><td align="center">人民出版社</td><td align="center">2009</td><td align="center">33.80</td><td align="center">300</td></tr></tbody></table></li><li><p>求总藏书量、藏书总金额，总库存册数、最高价、最低价。</p></li><li><p>列出藏书在5本以上的书目（书名、作者、出版社、出版年份）。</p></li><li><p>列出年份最久远的书?</p></li><li><p>目前实际已借出多少册书？</p></li><li><p>哪一年的图书最多？</p></li><li><p>哪本借书证未归还的图书最多？</p></li><li><p>平均每本借书证的借书册数。</p></li><li><p>哪个单位的读者平均借书册数最多？</p></li><li><p>最近两年都未被借过的书。<br>注意：Oracle 系统日期时间 sysdate，更多关于oracle日期函数请自行查阅。</p></li><li><p>今年未借过书的借书证。</p></li></ol><h1 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h1><h2 id="实验内容-1"><a href="#实验内容-1" class="headerlink" title="实验内容"></a>实验内容</h2><ol><li>查询“红楼梦”目前可借的各图书编号，及所属版本信息。（是否借出为‘否‘的图书）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> 书目,图书</span><br><span class="line"><span class="keyword">where</span> 书目.ISBN<span class="operator">=</span>图书.ISBN</span><br><span class="line"><span class="keyword">and</span> 书名<span class="operator">=</span><span class="string">&#x27;红楼梦&#x27;</span></span><br><span class="line"><span class="keyword">and</span> 是否借出<span class="operator">=</span><span class="string">&#x27;否&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>   查找高等教育出版社的所有书目及单价，结果按单价降序排序。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">where</span> 出版单位<span class="operator">=</span><span class="string">&#x27;高等教育出版社&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 单价 <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>   统计“红楼梦”各版的藏书数量（ISBN不同则版本不同）。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(ISBN),ISBN</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">where</span> 书名<span class="operator">=</span><span class="string">&#x27;红楼梦&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ISBN;</span><br></pre></td></tr></table></figure><ol start="4"><li>   查询学号“20061234”号借书证借阅未还的图书的信息。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 借书证号,书名,书目.ISBN ,出版单位,作者,单价,    图书分类号</span><br><span class="line"><span class="keyword">from</span> 书目,借阅,图书</span><br><span class="line"><span class="keyword">where</span> 书目.ISBN<span class="operator">=</span>图书.ISBN</span><br><span class="line"><span class="keyword">and</span> 借阅.图书编号<span class="operator">=</span>图书.图书编号 </span><br><span class="line"><span class="keyword">and</span> 是否借出<span class="operator">=</span><span class="string">&#x27;是&#x27;</span></span><br><span class="line"><span class="keyword">and</span>  归还日期 <span class="keyword">is</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">and</span> 借书证号<span class="operator">=</span><span class="number">20061234</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>   查询各个出版社的图书最高单价、平均单价。（同上）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 出版单位,<span class="built_in">max</span>(单价),<span class="built_in">avg</span>(单价)</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 出版单位;</span><br></pre></td></tr></table></figure><ol start="6"><li>   要查询借阅了两本和两本以上图书的读者的个人信息。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 读者 </span><br><span class="line"><span class="keyword">where</span> 借书证号 <span class="keyword">in</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> 借书证号</span><br><span class="line"><span class="keyword">from</span> 借阅</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 借书证号 </span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(借书证号)<span class="operator">&gt;=</span><span class="number">2</span>);</span><br></pre></td></tr></table></figure><ol start="7"><li>   查询“王菲”的单位、所借图书的书名和借阅日期。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 单位,书名,借书日期</span><br><span class="line"><span class="keyword">from</span> 读者,借阅,书目,图书</span><br><span class="line"><span class="keyword">where</span>  姓名<span class="operator">=</span><span class="string">&#x27;王菲&#x27;</span></span><br><span class="line"><span class="keyword">and</span> 读者.借书证号<span class="operator">=</span>借阅.借书证号</span><br><span class="line"><span class="keyword">and</span> 借阅.图书编号<span class="operator">=</span>图书.图书编号</span><br><span class="line"><span class="keyword">and</span> 图书.ISBN<span class="operator">=</span>书目.ISBN ;</span><br></pre></td></tr></table></figure><ol start="8"><li>   查询每类图书的册数和平均单价。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(图书分类号),<span class="built_in">avg</span>(单价)</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 图书分类号;</span><br></pre></td></tr></table></figure><ol start="9"><li>   统计从未借书的读者人数。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(姓名)</span><br><span class="line"><span class="keyword">from</span> 读者</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 借阅 </span><br><span class="line"><span class="keyword">where</span> 读者.借书证号<span class="operator">=</span>借阅.借书证号);</span><br></pre></td></tr></table></figure><ol start="10"><li>   统计参与借书的人数。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(姓名)</span><br><span class="line"><span class="keyword">from</span> 读者</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 借阅 </span><br><span class="line"><span class="keyword">where</span> 读者.借书证号<span class="operator">=</span>借阅.借书证号);</span><br></pre></td></tr></table></figure><ol start="11"><li>   找出所有借书未还的读者的信息及所借图书编号及名称。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 借阅.借书证号,姓名,单位,性别,地址,联系电话,身份证编号,借阅.图书编号,书名</span><br><span class="line"><span class="keyword">from</span> 借阅,书目,读者,图书</span><br><span class="line"><span class="keyword">where</span> 借阅.借书证号<span class="operator">=</span>读者.借书证号</span><br><span class="line"><span class="keyword">and</span> 借阅.图书编号<span class="operator">=</span>图书.图书编号</span><br><span class="line"><span class="keyword">and</span> 书目.ISBN<span class="operator">=</span>图书.ISBN</span><br><span class="line"><span class="keyword">and</span> 归还日期 <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><ol start="12"><li>   检索书名是以“红”开头的所有图书的书名和作者。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 书名,作者</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">where</span> 书名 <span class="keyword">like</span> <span class="string">&#x27;红%&#x27;</span>;</span><br></pre></td></tr></table></figure><ol start="13"><li>   查询各图书的罚款总数。（分组，图书编号+罚款总数）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 书目.ISBN,<span class="built_in">sum</span>(罚金)</span><br><span class="line"><span class="keyword">from</span> 借阅,罚款分类,书目,图书</span><br><span class="line"><span class="keyword">where</span> 借阅.罚款分类号<span class="operator">=</span>罚款分类.罚款分类号</span><br><span class="line"><span class="keyword">and</span> 借阅.图书编号<span class="operator">=</span>图书.图书编号</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 书目.ISBN</span><br></pre></td></tr></table></figure><ol start="14"><li>   查询借阅及罚款分类信息，如果有罚款则显示借阅信息及罚款名称、罚金，如果没有罚款则罚款名称、罚金显示空</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 借阅  <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> 罚款分类 <span class="keyword">on</span>(借阅.罚款分类号<span class="operator">=</span>罚款分类.罚款分类号)</span><br></pre></td></tr></table></figure><ol start="15"><li>   查询借阅了所有“文学”类书目的读者的姓名、单位。（判断条件）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 读者.姓名,读者.单位</span><br><span class="line"><span class="keyword">from</span> 读者</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span>(</span><br><span class="line">      <span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">      <span class="keyword">from</span> 书目,图书分类</span><br><span class="line">      <span class="keyword">where</span> 书目.图书分类号<span class="operator">=</span>图书分类.图书分类号 <span class="keyword">and</span> 图书分类.类名<span class="operator">=</span><span class="string">&#x27;文学&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> <span class="keyword">exists</span></span><br><span class="line">      (</span><br><span class="line">            <span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line">            <span class="keyword">from</span> 借阅,图书</span><br><span class="line">            <span class="keyword">where</span> 借阅.图书编号<span class="operator">=</span>图书.图书编号 <span class="keyword">and</span> 借阅.借书证号<span class="operator">=</span>读者.借书证号 <span class="keyword">and</span> 书目.ISBN<span class="operator">=</span>图书.ISBN</span><br><span class="line">      )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="实验扩展-1"><a href="#实验扩展-1" class="headerlink" title="实验扩展"></a>实验扩展</h2><ol><li>在书目关系中新增“出版年份”，并在该属性下添加数据。（使用SQL完成）<table><thead><tr><th align="center">ISBN</th><th align="center">书名</th><th align="center">作者</th><th align="center">出版单位</th><th align="center">出版年份</th><th align="center">单价</th><th align="center">图书分类号</th></tr></thead><tbody><tr><td align="center">7040195836</td><td align="center">数据库系统概论</td><td align="center">王珊</td><td align="center">高等教育出版社</td><td align="center">2005</td><td align="center">39.00</td><td align="center">200</td></tr><tr><td align="center">9787508040110</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">人民出版社</td><td align="center">1983</td><td align="center">20.00</td><td align="center">100</td></tr><tr><td align="center">9787506336239</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">作家出版社</td><td align="center">2008</td><td align="center">34.30</td><td align="center">100</td></tr><tr><td align="center">9787010073750</td><td align="center">心学之路</td><td align="center">张立文</td><td align="center">人民出版社</td><td align="center">2009</td><td align="center">33.80</td><td align="center">300</td></tr></tbody></table></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 书目</span><br><span class="line"><span class="keyword">add</span> 出版年份 number;</span><br><span class="line">update 书目 <span class="keyword">set</span> 出版年份<span class="operator">=</span><span class="number">2005</span> <span class="keyword">where</span> ISBN<span class="operator">=</span><span class="number">7040195836</span>;</span><br><span class="line">update 书目 <span class="keyword">set</span> 出版年份<span class="operator">=</span><span class="number">1983</span> <span class="keyword">where</span> ISBN<span class="operator">=</span><span class="number">9787508040110</span>;</span><br><span class="line">update 书目 <span class="keyword">set</span> 出版年份<span class="operator">=</span><span class="number">2008</span> <span class="keyword">where</span> ISBN<span class="operator">=</span><span class="number">9787506336239</span>;</span><br><span class="line">update 书目 <span class="keyword">set</span> 出版年份<span class="operator">=</span><span class="number">2009</span> <span class="keyword">where</span> ISBN<span class="operator">=</span><span class="number">9787010073750</span>;</span><br></pre></td></tr></table></figure><p>2、求总藏书量、藏书总金额，总库存册数、最高价、最低价。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(图书编号),<span class="built_in">sum</span>(单价),<span class="built_in">max</span>(单价),<span class="built_in">min</span>(单价)</span><br><span class="line"><span class="keyword">from</span> 书目,图书</span><br><span class="line"><span class="keyword">where</span> 书目.ISBN<span class="operator">=</span>图书.ISBN;</span><br></pre></td></tr></table></figure><p>3、列出藏书在5本以上的书目（书名、作者、出版社、出版年份）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 书名,作者,出版单位,出版年份</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">where</span> 书目.ISBN <span class="keyword">in</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> 图书.ISBN</span><br><span class="line"><span class="keyword">from</span> 图书</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 图书.ISBN <span class="keyword">having</span> <span class="built_in">count</span>( 图书.ISBN)<span class="operator">&gt;</span><span class="number">5</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>4、列出年份最久远的书?</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 书名,作者,出版单位,出版年份</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line"><span class="keyword">where</span> 书目.出版年份 <span class="keyword">in</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(书目.出版年份)</span><br><span class="line"><span class="keyword">from</span> 书目</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>5、目前实际已借出多少册书？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(借阅.借阅流水号) 借出数量</span><br><span class="line"><span class="keyword">from</span> 借阅</span><br><span class="line"><span class="keyword">where</span> 归还日期 <span class="keyword">is</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p>6、哪一年的图书最多？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line"><span class="keyword">select</span> 出版年份,<span class="built_in">count</span>(出版年份) 数量 </span><br><span class="line"><span class="keyword">from</span> 图书,书目 </span><br><span class="line"><span class="keyword">where</span> 图书.ISBN <span class="operator">=</span> 书目.ISBN</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 出版年份 </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(出版年份) <span class="keyword">desc</span> </span><br><span class="line">) <span class="keyword">where</span> rownum<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>7、 哪本借书证未归还的图书最多？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (</span><br><span class="line"><span class="keyword">select</span> 借书证号</span><br><span class="line"><span class="keyword">from</span> 借阅</span><br><span class="line"><span class="keyword">where</span> 归还日期 <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 借书证号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(借书证号) <span class="keyword">desc</span></span><br><span class="line">) <span class="keyword">where</span> rownum<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><p>8、平均每本借书证的借书册数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 借书证号,<span class="built_in">count</span>(借书证号)</span><br><span class="line"><span class="keyword">from</span> 借阅 </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 借书证号;</span><br></pre></td></tr></table></figure><p>9、哪个单位的读者平均借书册数最多？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 读者.单位</span><br><span class="line"><span class="keyword">from</span> 读者</span><br><span class="line"><span class="keyword">where</span> 读者.借书证号 <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> 借书证号 <span class="keyword">from</span> (</span><br><span class="line"><span class="keyword">select</span> 借书证号, <span class="built_in">count</span>(借书证号)</span><br><span class="line"><span class="keyword">from</span> 借阅</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 借书证号</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>  <span class="built_in">count</span>(借书证号) <span class="keyword">desc</span> </span><br><span class="line">) <span class="keyword">where</span> rownum<span class="operator">=</span><span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>10、最近两年都未被借过的书。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span>(书目.ISBN),书目.书名,书目.出版单位</span><br><span class="line"><span class="keyword">from</span> 图书,书目,借阅</span><br><span class="line"><span class="keyword">where</span> 图书.图书编号<span class="operator">=</span>借阅.图书编号</span><br><span class="line"><span class="keyword">and</span> 书目.ISBN<span class="operator">=</span>图书.ISBN</span><br><span class="line"><span class="keyword">and</span> 借阅.借书日期</span><br><span class="line"><span class="keyword">not</span> <span class="keyword">between</span> to_date(<span class="string">&#x27;20180101&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> to_date(<span class="string">&#x27;20191231&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验类型&quot;&gt;&lt;a href=&quot;#实验类型&quot; class=&quot;headerlink&quot; title=&quot;实验类型&quot;&gt;&lt;/a&gt;实验类型&lt;/h1&gt;&lt;p&gt;验证型实验&lt;/p&gt;
&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="Database-experiment" scheme="http://example.com/tags/Database-experiment/"/>
    
  </entry>
  
  <entry>
    <title>数据库实验（一）建立数据库</title>
    <link href="http://example.com/2021/04/07/Database-experiment-1/"/>
    <id>http://example.com/2021/04/07/Database-experiment-1/</id>
    <published>2021-04-07T04:19:09.000Z</published>
    <updated>2021-04-28T02:12:02.950Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验类型"><a href="#实验类型" class="headerlink" title="实验类型"></a>实验类型</h1><p>设计性实验</p><h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ul><li>熟悉oracle环境。</li><li>熟练掌握和使用PL-SQL建立数据库基本表。</li><li>使用PL/SQL developer操作数据库。</li><li>熟练掌握SQL 建立关系，及增删改数据。</li></ul><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><ul><li>了解SQL PLUS的使用</li><li>使用PL/SQL developer的图形界面，建立图书管理数据库orcl中的读者关系，要求创建主键约束，用户定义的完整性约束（电话号码、身份证号）。</li><li>在建立的读者关系中输入有效数据。</li><li>删除读者关系。</li><li>在PL/SQL developer用SQL代码建立orcl数据库中各关系。</li><li>用SQL 代码完成数据增、删、改。</li></ul><h1 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h1><h2 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a>登录数据库</h2><ol><li>以SYSTEM登录数据库</li></ol><ul><li>输入口令为你创建数据库时设置的密码</li></ul><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic1.png" class title="# tu"><ol start="2"><li>注册用户、重新以新用户登录数据库</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic2.png" class title="# tu"><h2 id="图形化界面建表"><a href="#图形化界面建表" class="headerlink" title="图形化界面建表"></a>图形化界面建表</h2><ol><li>图书分类（图书分类号，类名）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic3.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic4.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic5.png" class title="# tu"><ol start="2"><li>读者 （借书证号，姓名，单位，性别，地址，联系电话，身份证编号）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic6.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic7.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic8.png" class title="# tu"><ol start="3"><li>书目（ISBN, 书名，作者，出版单位，单价，图书分类号）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic9.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic10.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic11.png" class title="# tu"><ol start="4"><li>图书（图书编号，ISBN，是否借出，备注）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic12.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic13.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic14.png" class title="# tu"><ol start="5"><li>借阅 （借阅流水号，借书证号，图书编号，借书日期，归还日期，罚款分类号，备注）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic15.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic16.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic17.png" class title="# tu"><ol start="6"><li>罚款分类（罚款分类号，罚款名称，罚金）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic18.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic19.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic20.png" class title="# tu"><ol start="7"><li>预约（预约流水号，借书证号，ISBN，日期）</li></ol><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic21.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic22.png" class title="# tu"><img lazyload src="/images/loading.svg" data-src="/2021/04/07/Database-experiment-1/pic23.png" class title="# tu"><h2 id="建立数据库表：打开tables文件夹。建立以下各关系："><a href="#建立数据库表：打开tables文件夹。建立以下各关系：" class="headerlink" title="建立数据库表：打开tables文件夹。建立以下各关系："></a>建立数据库表：打开tables文件夹。建立以下各关系：</h2><ol><li>图书分类（图书分类号，类名）</li></ol><table><thead><tr><th align="center">图书分类号</th><th align="center">类名</th></tr></thead><tbody><tr><td align="center">100</td><td align="center">文学</td></tr><tr><td align="center">200</td><td align="center">科技</td></tr><tr><td align="center">300</td><td align="center">哲学</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 图书分类</span><br><span class="line">(</span><br><span class="line">  图书分类号 NUMBER <span class="keyword">primary</span> key,</span><br><span class="line">  类名    VARCHAR2(<span class="number">4</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书分类 (图书分类号,类名) <span class="keyword">values</span> (<span class="number">100</span>,<span class="string">&#x27;文学&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书分类 <span class="keyword">values</span> (<span class="number">200</span>,<span class="string">&#x27;科技&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书分类 (图书分类号,类名) <span class="keyword">values</span> (<span class="number">300</span>,<span class="string">&#x27;哲学&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>书目（ISBN, 书名，作者，出版单位，单价，图书分类号）</li></ol><table><thead><tr><th align="center">ISBN</th><th align="center">书名</th><th align="center">作者</th><th align="center">出版单位</th><th align="center">单价</th><th align="center">图书分类号</th></tr></thead><tbody><tr><td align="center">7040195836</td><td align="center">数据库系统概论</td><td align="center">王珊</td><td align="center">高等教育出版社</td><td align="center">39.00</td><td align="center">200</td></tr><tr><td align="center">9787508040110</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">人民出版社</td><td align="center">20.00</td><td align="center">100</td></tr><tr><td align="center">9787506336239</td><td align="center">红楼梦</td><td align="center">曹雪芹</td><td align="center">作家出版社</td><td align="center">34.30</td><td align="center">100</td></tr><tr><td align="center">9787010073750</td><td align="center">心学之路</td><td align="center">张立文</td><td align="center">人民出版社</td><td align="center">33.80</td><td align="center">300</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 书目</span><br><span class="line">(</span><br><span class="line">  isbn  NUMBER <span class="keyword">primary</span> key</span><br><span class="line">  书名    VARCHAR2(<span class="number">14</span>),</span><br><span class="line">  作者    VARCHAR2(<span class="number">6</span>),</span><br><span class="line">  出版单位  VARCHAR2(<span class="number">14</span>),</span><br><span class="line">  单价    NUMBER,</span><br><span class="line">  图书分类号 NUMBER,</span><br><span class="line">  出版年份  NUMBER,</span><br><span class="line">  <span class="keyword">foreign</span> key(图书分类号) <span class="keyword">references</span> 图书分类(图书分类号)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 书目 <span class="keyword">values</span> (<span class="number">7040195836</span>,<span class="string">&#x27;数据库系统概论&#x27;</span>,<span class="string">&#x27;王珊&#x27;</span>,<span class="string">&#x27;高等教育出社&#x27;</span>,<span class="number">39.00</span>,<span class="string">&#x27;200&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 书目 <span class="keyword">values</span> (<span class="number">9787508040110</span>,<span class="string">&#x27;红楼梦&#x27;</span>,<span class="string">&#x27;曹雪芹&#x27;</span>,<span class="string">&#x27;人民出版社&#x27;</span>,<span class="number">20.00</span>,<span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 书目 <span class="keyword">values</span> (<span class="number">9787506336239</span>,<span class="string">&#x27;红楼梦&#x27;</span>,<span class="string">&#x27;曹雪芹&#x27;</span>,<span class="string">&#x27;作家出版社&#x27;</span>,<span class="number">34.30</span>,<span class="string">&#x27;100&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 书目 <span class="keyword">values</span> (<span class="number">9787010073750</span>,<span class="string">&#x27;心学之路&#x27;</span>,<span class="string">&#x27;王珊&#x27;</span>,<span class="string">&#x27;人民出版社&#x27;</span>,<span class="number">33.80</span>,<span class="string">&#x27;300&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>图书（图书编号，ISBN，是否借出，备注）</li></ol><table><thead><tr><th align="center">图书编号</th><th align="center">ISBN</th><th align="center">是否借出</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">2001231</td><td align="center">7040195836</td><td align="center">否</td><td align="center"></td></tr><tr><td align="center">2001232</td><td align="center">7040195836</td><td align="center">是</td><td align="center"></td></tr><tr><td align="center">1005050</td><td align="center">9787506336239</td><td align="center">否</td><td align="center"></td></tr><tr><td align="center">1005063</td><td align="center">9787508040110</td><td align="center">是</td><td align="center"></td></tr><tr><td align="center">3007071</td><td align="center">9787010073750</td><td align="center">是</td><td align="center"></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 图书</span><br><span class="line">(</span><br><span class="line">  图书编号 NUMBER <span class="keyword">primary</span> key,,</span><br><span class="line">  isbn NUMBER,</span><br><span class="line">  是否借出 VARCHAR2(<span class="number">2</span>),</span><br><span class="line">  备注   VARCHAR2(<span class="number">24</span>),</span><br><span class="line">  <span class="keyword">foreign</span> key(ISBN) <span class="keyword">references</span> 书目(ISBN)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书 <span class="keyword">values</span> (<span class="number">2001231</span>,<span class="string">&#x27;7040195836&#x27;</span>,<span class="string">&#x27;否&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书 <span class="keyword">values</span> (<span class="number">2001232</span>,<span class="string">&#x27;7040195836&#x27;</span>,<span class="string">&#x27;是&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书 <span class="keyword">values</span> (<span class="number">1005050</span>,<span class="string">&#x27;9787506336239&#x27;</span>,<span class="string">&#x27;否&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书 <span class="keyword">values</span> (<span class="number">1005063</span>,<span class="string">&#x27;9787508040110&#x27;</span>,<span class="string">&#x27;是&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 图书 <span class="keyword">values</span> (<span class="number">3007071</span>,<span class="string">&#x27;9787010073750&#x27;</span>,<span class="string">&#x27;是&#x27;</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>读者 （借书证号，姓名，单位，性别，地址，联系电话，身份证编号）</li></ol><table><thead><tr><th align="center">借书证号</th><th align="center">姓名</th><th align="center">单位</th><th align="center">性别</th><th align="center">地址</th><th align="center">联系电话</th><th align="center">身份证编号</th></tr></thead><tbody><tr><td align="center">20051001</td><td align="center">王菲</td><td align="center">四川绵阳西科大计算机学院</td><td align="center">女</td><td align="center">…</td><td align="center">…</td><td align="center">..</td></tr><tr><td align="center">20062001</td><td align="center">张江</td><td align="center">四川绵阳中心医院</td><td align="center">男</td><td align="center">…</td><td align="center">…</td><td align="center">..</td></tr><tr><td align="center">20061234</td><td align="center">郭敬明</td><td align="center">四川江油305</td><td align="center">男</td><td align="center">..</td><td align="center">..</td><td align="center">..</td></tr><tr><td align="center">20071235</td><td align="center">李晓明</td><td align="center">四川成都工商银行</td><td align="center">男</td><td align="center">..</td><td align="center">..</td><td align="center">..</td></tr><tr><td align="center">20081237</td><td align="center">赵鑫</td><td align="center">四川广元广元中学</td><td align="center">女</td><td align="center">..</td><td align="center">..</td><td align="center">..</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 读者</span><br><span class="line">(</span><br><span class="line">  借书证号  VARCHAR2(<span class="number">10</span>) <span class="keyword">primary</span> key,</span><br><span class="line">  姓名    VARCHAR2(<span class="number">10</span>),</span><br><span class="line">  单位    VARCHAR2(<span class="number">25</span>),</span><br><span class="line">  性别    VARCHAR2(<span class="number">2</span>),</span><br><span class="line">  地址    VARCHAR2(<span class="number">16</span>),</span><br><span class="line">  联系电话  VARCHAR2(<span class="number">16</span>),</span><br><span class="line">  身份证编号 VARCHAR2(<span class="number">16</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 读者 <span class="keyword">values</span> (<span class="string">&#x27;20051001&#x27;</span>,<span class="string">&#x27;王菲&#x27;</span>,<span class="string">&#x27;四川绵阳西科大计算机学院&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 读者 <span class="keyword">values</span> (<span class="string">&#x27;20062001&#x27;</span>,<span class="string">&#x27;张江&#x27;</span>,<span class="string">&#x27;四川绵阳中心医院&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;绵阳&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 读者 <span class="keyword">values</span> (<span class="string">&#x27;20061234&#x27;</span>,<span class="string">&#x27;郭敬明&#x27;</span>,<span class="string">&#x27;四川江油305&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;四川&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 读者 <span class="keyword">values</span> (<span class="string">&#x27;20071235&#x27;</span>,<span class="string">&#x27;李晓明&#x27;</span>,<span class="string">&#x27;四川成都工商银行&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 读者 <span class="keyword">values</span> (<span class="string">&#x27;20081237&#x27;</span>,<span class="string">&#x27;赵鑫&#x27;</span>,<span class="string">&#x27;四川广元广元中学&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;广元&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>借阅 （借阅流水号，借书证号，图书编号，借书日期，归还日期，罚款分类号，备注）</li></ol><table><thead><tr><th align="center">借书证号</th><th align="center">图书编号</th><th align="center">借书日期</th><th align="center">归还日期</th><th align="center">罚款分类号</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">20081237</td><td align="center">3007071</td><td align="center">2010/09/19</td><td align="center">2010/09/20</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">20071235</td><td align="center">1005063</td><td align="center">2010/10/20</td><td align="center">2011/02/20</td><td align="center">1</td><td align="center"></td></tr><tr><td align="center">20071235</td><td align="center">2001232</td><td align="center">2011/09/01</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">20061234</td><td align="center">1005063</td><td align="center">2011/9/20</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">20051001</td><td align="center">3007071</td><td align="center">2011/9/10</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">20071235</td><td align="center">1005050</td><td align="center">2011/10/20</td><td align="center">2012/02/20</td><td align="center">1</td><td align="center"></td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 借阅</span><br><span class="line">(</span><br><span class="line">  借阅流水号 NUMBER <span class="keyword">primary</span> key,</span><br><span class="line">  借书证号  VARCHAR2(<span class="number">16</span>),</span><br><span class="line">  图书编号  NUMBER(<span class="number">10</span>),</span><br><span class="line">  借书日期  <span class="type">DATE</span>,</span><br><span class="line">  归还日期  <span class="type">DATE</span>,</span><br><span class="line">  罚款分类号 NUMBER,</span><br><span class="line">  备注    VARCHAR2(<span class="number">20</span>),</span><br><span class="line">  <span class="keyword">foreign</span> key(借书证号) <span class="keyword">references</span> 读者(借书证号)</span><br><span class="line">  <span class="keyword">foreign</span> key(图书编号) <span class="keyword">references</span> 图书(图书编号)</span><br><span class="line">  <span class="keyword">foreign</span> key(罚款分类号) <span class="keyword">references</span> 罚款分类(罚款分类号)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;20081237&#x27;</span>,<span class="number">3007071</span>,to_date(<span class="string">&#x27;2010-09-19&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),to_date(<span class="string">&#x27;2010-09-20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;20071235&#x27;</span>,<span class="number">1005063</span>,to_date(<span class="string">&#x27;2010-10-20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),to_date(<span class="string">&#x27;2011-02-20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="number">1</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;20071235&#x27;</span>,<span class="number">2001232</span>,to_date(<span class="string">&#x27;2011-09-01&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">4</span>,<span class="string">&#x27;20061234&#x27;</span>,<span class="number">1005063</span>,to_date(<span class="string">&#x27;2011-09-20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;20051001&#x27;</span>,<span class="number">3007071</span>,to_date(<span class="string">&#x27;2011-09-10&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 借阅 <span class="keyword">values</span> (<span class="number">6</span>,<span class="string">&#x27;20071235&#x27;</span>,<span class="number">1005050</span>,to_date(<span class="string">&#x27;2011-10-20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),to_date(<span class="string">&#x27;2012/02/20&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>),<span class="number">1</span>,<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure><ol start="6"><li>罚款分类（罚款分类号，罚款名称，罚金）</li></ol><table><thead><tr><th align="center">罚款分类号</th><th align="center">罚款名称</th><th align="center">罚金</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">延期</td><td align="center">10</td></tr><tr><td align="center">2</td><td align="center">损坏</td><td align="center">20</td></tr><tr><td align="center">3</td><td align="center">丢失</td><td align="center">50</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 罚款分类</span><br><span class="line">(</span><br><span class="line">  罚款分类号 NUMBER <span class="keyword">primary</span> key,</span><br><span class="line">  罚款名称  VARCHAR2(<span class="number">10</span>),</span><br><span class="line">  罚金    NUMBER(<span class="number">3</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 罚款分类 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;延期&#x27;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 罚款分类 <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;损坏&#x27;</span>,<span class="number">20</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 罚款分类 <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;丢失&#x27;</span>,<span class="number">50</span>);</span><br></pre></td></tr></table></figure><ol start="7"><li>预约 （预约流水号，借书证号，ISBN，预约时间）</li></ol><table><thead><tr><th align="center">预约流水号</th><th align="center">借书证号</th><th align="center">ISBN</th><th align="center">预约时间</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">20081237</td><td align="center">9787508040110</td><td align="center">2011/09/11</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 预约</span><br><span class="line">(</span><br><span class="line">  预约流水号  NUMBER <span class="keyword">primary</span> key,</span><br><span class="line">  借书证号   VARCHAR2(<span class="number">16</span>),</span><br><span class="line">  isbn   NUMBER,</span><br><span class="line">  s_date <span class="type">DATE</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 预约 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;20081237&#x27;</span>,<span class="string">&#x27;9787508040110&#x27;</span>,<span class="string">&#x27;2011/09/11&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="使用SQL语句练习表的创建、删除、修改操作"><a href="#使用SQL语句练习表的创建、删除、修改操作" class="headerlink" title="使用SQL语句练习表的创建、删除、修改操作"></a>使用SQL语句练习表的创建、删除、修改操作</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 图书;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 图书 <span class="keyword">add</span> 图书分类号 number;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 图书 <span class="keyword">drop</span> <span class="keyword">column</span> 图书分类号;</span><br><span class="line"></span><br><span class="line">update 图书 <span class="keyword">set</span> 是否借出<span class="operator">=</span><span class="string">&#x27;否&#x27;</span> <span class="keyword">where</span> 图书分类号<span class="operator">=</span><span class="string">&#x27;2002141&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="试根据下面的完整性约束要求，用SQL对上面已经建立好的数据库表进行完整性约束定义。"><a href="#试根据下面的完整性约束要求，用SQL对上面已经建立好的数据库表进行完整性约束定义。" class="headerlink" title="试根据下面的完整性约束要求，用SQL对上面已经建立好的数据库表进行完整性约束定义。"></a>试根据下面的完整性约束要求，用SQL对上面已经建立好的数据库表进行完整性约束定义。</h2><p>读者关系中属性  联系电话  取值为11位数字<br>身份证编号  取值为18位，并且满足身份证编号规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 读者 <span class="keyword">add</span> <span class="keyword">constraint</span> PhoneNumber <span class="keyword">check</span>(regexp_like(联系电话,<span class="string">&#x27;1[3|4|5|7|8][0-9]&#123;9&#125;&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 读者 <span class="keyword">add</span> <span class="keyword">constraint</span> IDENTITYNUM <span class="keyword">check</span>(regexp_like(身份证号,<span class="string">&#x27;[1-9\d&#123;5&#125;(19|20)\d&#123;2&#125;((0[1-9])|(1[0-2]))(([0-2][1-9])|([1-3]0)|31)\d&#123;3&#125;[0-9Xx]&#x27;</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验类型&quot;&gt;&lt;a href=&quot;#实验类型&quot; class=&quot;headerlink&quot; title=&quot;实验类型&quot;&gt;&lt;/a&gt;实验类型&lt;/h1&gt;&lt;p&gt;设计性实验&lt;/p&gt;
&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="Database-experiment" scheme="http://example.com/tags/Database-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验十四 网络爬虫基础（1）</title>
    <link href="http://example.com/2021/04/05/python-experiment-14/"/>
    <id>http://example.com/2021/04/05/python-experiment-14/</id>
    <published>2021-04-05T10:02:52.000Z</published>
    <updated>2021-04-05T10:04:41.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>1、网络爬虫的基本原理与规范。<br>2、掌握使用 Requests 库获取静态网页信息。<br>3、掌握使用 BeautifulSoup4 库解析网页信息。<br>4、掌握正则表达式的基本用法。</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="题目-中国大学排名定向爬虫"><a href="#题目-中国大学排名定向爬虫" class="headerlink" title="题目 中国大学排名定向爬虫"></a>题目 中国大学排名定向爬虫</h3><p>(1) 查看 <a class="link" href="https://www.shanghairanking.cn/rankings/bcur/2020">https://www.shanghairanking.cn/rankings/bcur/2020<i class="fas fa-external-link-alt"></i></a> 网页中关于各大学排名的信息组织(F12 快捷键查阅 html 代码)<br>(2)使用 requests、beautifulsoup4 或 re 库抓取并解析排名，输出各大学的排名信息，如下图所示。<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210113000419726.png" alt="在这里插入图片描述"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span>  bs4</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url,timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUniviList</span>(<span class="params">ulist,html</span>):</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">&#x27;tbody&#x27;</span>).children:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(tr,bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">&#x27;td&#x27;</span>)</span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].text,tds[<span class="number">1</span>].text,tds[<span class="number">4</span>].text])</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnivList</span>(<span class="params">ulist,num</span>):</span></span><br><span class="line">    tplt = <span class="string">&quot;&#123;0:^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:^10&#125;&quot;</span></span><br><span class="line">    print(tplt.<span class="built_in">format</span>(<span class="string">&quot;排名&quot;</span>,<span class="string">&quot;学校排名&quot;</span>,<span class="string">&quot;总分&quot;</span>,<span class="built_in">chr</span>(<span class="number">12288</span>)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        u = ulist[i]</span><br><span class="line">        print(tplt.<span class="built_in">format</span>(u[<span class="number">0</span>].strip(),u[<span class="number">1</span>].strip(),u[<span class="number">2</span>].strip(),<span class="built_in">chr</span>(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">&#x27;https://www.shanghairanking.cn/rankings/bcur/2020&#x27;</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUniviList(uinfo,html)</span><br><span class="line">    printUnivList(uinfo,<span class="number">20</span>)</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h2&gt;&lt;p&gt;1、网络爬虫的基本原理与规范。&lt;br&gt;2、掌握使用 Requests 库获取静态网页信息。&lt;br&gt;3、掌握使用 Beauti</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验十三 数据分析与可视化（2）</title>
    <link href="http://example.com/2021/04/05/python-experiment-13/"/>
    <id>http://example.com/2021/04/05/python-experiment-13/</id>
    <published>2021-04-05T10:00:21.000Z</published>
    <updated>2021-04-05T10:05:57.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>1、 掌握第三方库 TuShare 的数据获取方法<br>2、 能够利用 pandas 库进行简单的数据分析<br>3、 能够利用 matplotlib 库进行数据可视化<br>4、 综合应用上述第三方库解决问题的能力</p><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><h3 id="一、读取-stock-hist-data-csv-中招商银行（股票代码-600036）2018-年下半年的股票数据并完成如下数据处理和分析任务："><a href="#一、读取-stock-hist-data-csv-中招商银行（股票代码-600036）2018-年下半年的股票数据并完成如下数据处理和分析任务：" class="headerlink" title="一、读取 stock_hist_data.csv 中招商银行（股票代码 600036）2018 年下半年的股票数据并完成如下数据处理和分析任务："></a>一、读取 stock_hist_data.csv 中招商银行（股票代码 600036）2018 年下半年的股票数据并完成如下数据处理和分析任务：</h3><h5 id="1-数据只保留-date、open、high、close、low-和-volume-这几个属性，并按时间先后顺序对数据进行排序；使用-matplotlib-绘制出收盘价（close）的走势折线图。"><a href="#1-数据只保留-date、open、high、close、low-和-volume-这几个属性，并按时间先后顺序对数据进行排序；使用-matplotlib-绘制出收盘价（close）的走势折线图。" class="headerlink" title="(1) 数据只保留 date、open、high、close、low 和 volume 这几个属性，并按时间先后顺序对数据进行排序；使用 matplotlib 绘制出收盘价（close）的走势折线图。"></a>(1) 数据只保留 date、open、high、close、low 和 volume 这几个属性，并按时间先后顺序对数据进行排序；使用 matplotlib 绘制出收盘价（close）的走势折线图。</h5><h5 id="2-输出这半年内成交量（volume）最低和最高那两天的日期和分别的成交量；"><a href="#2-输出这半年内成交量（volume）最低和最高那两天的日期和分别的成交量；" class="headerlink" title="(2) 输出这半年内成交量（volume）最低和最高那两天的日期和分别的成交量；"></a>(2) 输出这半年内成交量（volume）最低和最高那两天的日期和分别的成交量；</h5><h5 id="3-列出成交量（volume）在-1000000-以上的记录；"><a href="#3-列出成交量（volume）在-1000000-以上的记录；" class="headerlink" title="(3) 列出成交量（volume）在 1000000 以上的记录；"></a>(3) 列出成交量（volume）在 1000000 以上的记录；</h5><h5 id="4-计算这半年中收盘价（close）高于开盘价（open）的天数；"><a href="#4-计算这半年中收盘价（close）高于开盘价（open）的天数；" class="headerlink" title="(4) 计算这半年中收盘价（close）高于开盘价（open）的天数；"></a>(4) 计算这半年中收盘价（close）高于开盘价（open）的天数；</h5><h5 id="5-计算每月收盘价的平均值，并使用-matplotlib-绘制出柱状图。"><a href="#5-计算每月收盘价的平均值，并使用-matplotlib-绘制出柱状图。" class="headerlink" title="(5) 计算每月收盘价的平均值，并使用 matplotlib 绘制出柱状图。"></a>(5) 计算每月收盘价的平均值，并使用 matplotlib 绘制出柱状图。</h5><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"><span class="comment">#(1) 数据只保留 date、open、high、close、low 和 volume 这几个属性，并按时间先后顺序对数据进行排序；使用 matplotlib 绘制出收盘价（close）的走势折线图。</span></span><br><span class="line">data_frame = pd.DataFrame(pd.read_csv(<span class="string">&#x27;stock_hist_data.csv&#x27;</span>).iloc[:,:<span class="number">6</span>])</span><br><span class="line"></span><br><span class="line">data_frame = data_frame.sort_values(<span class="string">&#x27;date&#x27;</span>,ascending=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">data_frame.close.plot()</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;收盘价(close)的走势图&quot;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;收盘价(close)的走势图.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（2）输出这半年内成交量（volume）最低和最高那两天的日期和分别的成交量；</span></span><br><span class="line">data_volume_max_index = data_frame.volume.idxmax()</span><br><span class="line">data_volume_max = data_frame.loc[data_volume_max_index][[<span class="string">&#x27;date&#x27;</span>,<span class="string">&#x27;volume&#x27;</span>]].values</span><br><span class="line"><span class="comment"># print(data_volume_max_index)</span></span><br><span class="line">data_volume_min_index = data_frame.volume.idxmin()</span><br><span class="line">data_volume_min = data_frame.loc[data_volume_min_index][[<span class="string">&#x27;date&#x27;</span>,<span class="string">&#x27;volume&#x27;</span>]].values</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;半年成交量中&#123;&#125;这一天最高，为&#123;&#125;。\n&quot;</span>.<span class="built_in">format</span>(data_volume_max[<span class="number">0</span>],data_volume_max[<span class="number">1</span>]))</span><br><span class="line">print(<span class="string">&quot;半年成交量中&#123;&#125;这一天最低，为&#123;&#125;。\n&quot;</span>.<span class="built_in">format</span>(data_volume_min[<span class="number">0</span>],data_volume_min[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#(3) 列出成交量（volume）在 1000000 以上的记录；</span></span><br><span class="line">data_volume_more_than_1000000 = data_frame[data_frame.volume &gt; <span class="number">1000000</span>]</span><br><span class="line">print(<span class="string">&quot;成交量在1000000以上的记录为：\n&quot;</span>,data_volume_more_than_1000000)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(4) 计算这半年中收盘价（close）高于开盘价（open）的天数；</span></span><br><span class="line">data_frame_count = data_frame[data_frame.close &gt; data_frame.<span class="built_in">open</span>][<span class="string">&#x27;date&#x27;</span>].count()</span><br><span class="line">print(<span class="string">&quot;收盘价高于开盘价的天数共有：&#123;&#125;天\n&quot;</span>.<span class="built_in">format</span>(data_frame_count))</span><br><span class="line"></span><br><span class="line"><span class="comment">#(5) 计算每月收盘价的平均值，并使用 matplotlib 绘制出柱状图。</span></span><br><span class="line">data_frame_5 = data_frame.loc[:,[<span class="string">&#x27;date&#x27;</span>,<span class="string">&#x27;close&#x27;</span>]]</span><br><span class="line">data_frame_5[<span class="string">&#x27;date&#x27;</span>] = data_frame_5[<span class="string">&#x27;date&#x27;</span>].apply(<span class="keyword">lambda</span> x:x[:<span class="number">7</span>])</span><br><span class="line">data_frame_5_close_average = data_frame_5.groupby(<span class="string">&#x27;date&#x27;</span>).mean()</span><br><span class="line"><span class="comment"># print(data_frame_5_close_average)</span></span><br><span class="line">data_frame_5_close_average.plot.bar()</span><br><span class="line">plt.title(<span class="string">&quot;每月收盘价(close)的平均值&quot;</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;average.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>（1）<br><img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112224752413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（5）<br><img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112224835490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="二、读取“2018-世界杯球队数据-csv”，实现如下功能："><a href="#二、读取“2018-世界杯球队数据-csv”，实现如下功能：" class="headerlink" title="二、读取“2018 世界杯球队数据.csv”，实现如下功能："></a>二、读取“2018 世界杯球队数据.csv”，实现如下功能：</h3><h5 id="1-输出净胜球大于-0-的球队；"><a href="#1-输出净胜球大于-0-的球队；" class="headerlink" title="(1) 输出净胜球大于 0 的球队；"></a>(1) 输出净胜球大于 0 的球队；</h5><h5 id="2-输出被罚红牌的球队；"><a href="#2-输出被罚红牌的球队；" class="headerlink" title="(2) 输出被罚红牌的球队；"></a>(2) 输出被罚红牌的球队；</h5><h5 id="3-输出进球成功率超过-10-的球队以及进球数和射门数；"><a href="#3-输出进球成功率超过-10-的球队以及进球数和射门数；" class="headerlink" title="(3) 输出进球成功率超过 10%的球队以及进球数和射门数；"></a>(3) 输出进球成功率超过 10%的球队以及进球数和射门数；</h5><h5 id="4-输出进球数超过进球平均数且被罚黄牌少于-5-张的球队及其进球数和黄牌数；"><a href="#4-输出进球数超过进球平均数且被罚黄牌少于-5-张的球队及其进球数和黄牌数；" class="headerlink" title="(4) 输出进球数超过进球平均数且被罚黄牌少于 5 张的球队及其进球数和黄牌数；"></a>(4) 输出进球数超过进球平均数且被罚黄牌少于 5 张的球队及其进球数和黄牌数；</h5><h5 id="5-按照进球数降序输出所有球队及进球信息；"><a href="#5-按照进球数降序输出所有球队及进球信息；" class="headerlink" title="(5) 按照进球数降序输出所有球队及进球信息；"></a>(5) 按照进球数降序输出所有球队及进球信息；</h5><h5 id="6-按照所属区进行分组，按升序统计输出每个区的进球数；"><a href="#6-按照所属区进行分组，按升序统计输出每个区的进球数；" class="headerlink" title="(6) 按照所属区进行分组，按升序统计输出每个区的进球数；"></a>(6) 按照所属区进行分组，按升序统计输出每个区的进球数；</h5><h5 id="7-按照所属区进行分组，绘制每个区进球数的条形图；"><a href="#7-按照所属区进行分组，绘制每个区进球数的条形图；" class="headerlink" title="(7) 按照所属区进行分组，绘制每个区进球数的条形图；"></a>(7) 按照所属区进行分组，绘制每个区进球数的条形图；</h5><h5 id="8-自选角度，根据各个球队的相关数据，绘制一个其他类型的图形，并增加一些必要的元素（如标签、标题等）。"><a href="#8-自选角度，根据各个球队的相关数据，绘制一个其他类型的图形，并增加一些必要的元素（如标签、标题等）。" class="headerlink" title="(8) 自选角度，根据各个球队的相关数据，绘制一个其他类型的图形，并增加一些必要的元素（如标签、标题等）。"></a>(8) 自选角度，根据各个球队的相关数据，绘制一个其他类型的图形，并增加一些必要的元素（如标签、标题等）。</h5><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"><span class="comment">#(1) 输出净胜球大于 0 的球队；</span></span><br><span class="line">data_frame = pd.DataFrame(pd.read_csv(<span class="string">&#x27;2018世界杯球队数据.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line">data_frame_1 = data_frame.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>,<span class="string">&#x27;失球&#x27;</span>]]</span><br><span class="line">data_frame_1_win_goal = data_frame_1[<span class="string">&#x27;进球&#x27;</span>] - data_frame_1[<span class="string">&#x27;失球&#x27;</span>]</span><br><span class="line">data_frame_1[<span class="string">&#x27;净胜球&#x27;</span>] = data_frame_1_win_goal</span><br><span class="line">data_frame_1 = data_frame_1[data_frame_1.净胜球 &gt;<span class="number">0</span>]</span><br><span class="line">data_frame_1_final = data_frame_1.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;净胜球&#x27;</span>]]</span><br><span class="line">data_frame_1_name = data_frame_1_final[<span class="string">&#x27;球队&#x27;</span>].values</span><br><span class="line">print(<span class="string">&#x27;净胜球大于0的球队有：&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data_frame_1_name:</span><br><span class="line">    print(i,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(2) 输出被罚红牌的球队；</span></span><br><span class="line">data_frame_2 = data_frame.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;红牌&#x27;</span>]]</span><br><span class="line">data_frame_2 = data_frame_2[data_frame_2.红牌 &gt; <span class="number">0</span>].values</span><br><span class="line">print(<span class="string">&#x27;被罚红牌的队伍有:&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data_frame_2:</span><br><span class="line">    print(i[<span class="number">0</span>],end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#（3）输出进球成功率超过 10%的球队以及进球数和射门数；</span></span><br><span class="line">data_frame_3 = data_frame.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>,<span class="string">&#x27;射门&#x27;</span>]]</span><br><span class="line">data_frame_3_goalrate = data_frame_3[<span class="string">&#x27;进球&#x27;</span>] / data_frame_3[<span class="string">&#x27;射门&#x27;</span>]*<span class="number">100</span></span><br><span class="line">data_frame_3[<span class="string">&#x27;进球率&#x27;</span>] = data_frame_3_goalrate</span><br><span class="line">data_frame_3 = data_frame_3[data_frame_3.进球率 &gt; <span class="number">10</span>]</span><br><span class="line">data_frame_3.drop(labels=<span class="string">&#x27;进球率&#x27;</span>,axis=<span class="number">1</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">print(data_frame_3)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(4) 输出进球数超过进球平均数且被罚黄牌少于 5 张的球队及其进球数和黄牌数；</span></span><br><span class="line">data_frame_4 = data_frame.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>,<span class="string">&#x27;黄牌&#x27;</span>]]</span><br><span class="line">data_frame_4_TotalGoalAverage = data_frame_4[<span class="string">&#x27;进球&#x27;</span>].mean()</span><br><span class="line"><span class="comment"># print(data_frame_4_TotalGoalAverage)</span></span><br><span class="line">data_frame_4 = data_frame_4[(data_frame_4.进球 &gt; data_frame_4_TotalGoalAverage) &amp; (data_frame_4.黄牌 &lt; <span class="number">5</span>)]</span><br><span class="line">print(data_frame_4)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(5) 按照进球数降序输出所有球队及进球信息；</span></span><br><span class="line">data_frame_5 = data_frame.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>]]</span><br><span class="line">data_frame_5.sort_values(by=<span class="string">&#x27;进球&#x27;</span>,ascending=<span class="literal">False</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">print(data_frame_5)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(6) 按照所属区进行分组，按升序统计输出每个区的进球数；</span></span><br><span class="line">data_frame_6 = data_frame.loc[:,[<span class="string">&#x27;所属洲&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>]]</span><br><span class="line">data_frame_6_final = data_frame_6.groupby(<span class="string">&#x27;所属洲&#x27;</span>).<span class="built_in">sum</span>()</span><br><span class="line">data_frame_6_final.sort_values(by=<span class="string">&#x27;进球&#x27;</span>,inplace=<span class="literal">True</span>)</span><br><span class="line">print(data_frame_6_final)</span><br><span class="line"></span><br><span class="line"><span class="comment">#(7) 按照所属区进行分组，绘制每个区进球数的条形图；</span></span><br><span class="line">data_frame_7 = data_frame.loc[:,[<span class="string">&#x27;所属洲&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>]]</span><br><span class="line">data_frame_7_final = data_frame_7.groupby(<span class="string">&#x27;所属洲&#x27;</span>).<span class="built_in">sum</span>()</span><br><span class="line">data_frame_7_final.plot.bar()</span><br><span class="line">plt.title(<span class="string">&#x27;各大洲进球数&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment">#(8) 自选角度，根据各个球队的相关数据，绘制一个其他类型的图形，并增加一些必要的元素（如标签、标题等）。</span></span><br><span class="line">data_frame_8 = data_frame.loc[:,[<span class="string">&#x27;所属洲&#x27;</span>,<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>,<span class="string">&#x27;抢断&#x27;</span>,<span class="string">&#x27;射门&#x27;</span>]]</span><br><span class="line">data_frame_8 = data_frame_8[data_frame_8.所属洲 == <span class="string">&#x27;欧洲&#x27;</span>]</span><br><span class="line">data_frame_8_bar = data_frame_8.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;进球&#x27;</span>]]</span><br><span class="line">data_frame_8_pie = data_frame_8.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;抢断&#x27;</span>]]</span><br><span class="line">data_frame_8_plot = data_frame_8.loc[:,[<span class="string">&#x27;球队&#x27;</span>,<span class="string">&#x27;射门&#x27;</span>]]</span><br><span class="line"><span class="comment"># print(data_frame_8_bar)</span></span><br><span class="line">plt.subplot(<span class="number">221</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;欧洲球队抢断数&#x27;</span>)</span><br><span class="line">plt.scatter(data_frame_8_pie[<span class="string">&#x27;抢断&#x27;</span>],data_frame_8_pie[<span class="string">&#x27;球队&#x27;</span>])</span><br><span class="line">plt.subplot(<span class="number">222</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;欧洲球队射门次数占比&#x27;</span>)</span><br><span class="line">plt.pie(data_frame_8_plot[<span class="string">&#x27;射门&#x27;</span>],labels=data_frame_8_plot[<span class="string">&#x27;球队&#x27;</span>])</span><br><span class="line">plt.subplot(<span class="number">212</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;欧洲球队进球数&#x27;</span>)</span><br><span class="line">plt.bar(data_frame_8_bar[<span class="string">&#x27;球队&#x27;</span>],data_frame_8_bar[<span class="string">&#x27;进球&#x27;</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p>（6）<br><img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112230241943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（7）<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/2021011223033649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h2&gt;&lt;p&gt;1、 掌握第三方库 TuShare 的数据获取方法&lt;br&gt;2、 能够利用 pandas 库进行简单的数据分析&lt;br&gt;3、 能</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验十二 数据分析与可视化（1）</title>
    <link href="http://example.com/2021/04/05/python-experiment-12/"/>
    <id>http://example.com/2021/04/05/python-experiment-12/</id>
    <published>2021-04-05T09:57:29.000Z</published>
    <updated>2021-04-05T09:59:58.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1、 熟悉 numpy 库常用方法的使用<br>2、 熟悉 pandas 库的基本使用<br>3、 能够利用 matplotlib 库进行简单的图形绘制</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>根据某商品近 5 年的销售流水，做数据分析和可视化。模拟产生数据代码如下：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112222109186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（1）编写程序生成某商品-2014-01-01-到-2018-12-31-的销售流水，模拟数据文件名为-data-csv，数据格式如下：（说明：日期是连续的，销量是随机数，单价范围为-101，105-的随机值）"><a href="#（1）编写程序生成某商品-2014-01-01-到-2018-12-31-的销售流水，模拟数据文件名为-data-csv，数据格式如下：（说明：日期是连续的，销量是随机数，单价范围为-101，105-的随机值）" class="headerlink" title="（1）编写程序生成某商品(2014-01-01 到 2018-12-31)的销售流水，模拟数据文件名为 data.csv，数据格式如下：（说明：日期是连续的，销量是随机数，单价范围为[101，105]的随机值）"></a>（1）编写程序生成某商品(2014-01-01 到 2018-12-31)的销售流水，模拟数据文件名为 data.csv，数据格式如下：（说明：日期是连续的，销量是随机数，单价范围为[101，105]的随机值）</h3><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112222332749.png" alt="在这里插入图片描述"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line">fn = <span class="string">&#x27;data.csv&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fn,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    wr = csv.writer(fp)</span><br><span class="line">    wr.writerow([<span class="string">&#x27;日期&#x27;</span>,<span class="string">&#x27;销量&#x27;</span>,<span class="string">&#x27;单价&#x27;</span>])</span><br><span class="line">    startDate = datetime.date(<span class="number">2014</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1825</span>):</span><br><span class="line">        amount = <span class="number">300</span>+i*<span class="number">5</span>+random.randrange(<span class="number">100</span>)</span><br><span class="line">        price = <span class="number">100</span>+random.randint(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">        wr.writerow([<span class="built_in">str</span>(startDate),amount,price])</span><br><span class="line">        startDate = startDate+datetime.timedelta(days=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="（2）使用-pandas-读取文件-data-csv-中的数据，创建-DataFrame-对象，并删除其中所有缺失值；"><a href="#（2）使用-pandas-读取文件-data-csv-中的数据，创建-DataFrame-对象，并删除其中所有缺失值；" class="headerlink" title="（2）使用 pandas 读取文件 data.csv 中的数据，创建 DataFrame 对象，并删除其中所有缺失值；"></a>（2）使用 pandas 读取文件 data.csv 中的数据，创建 DataFrame 对象，并删除其中所有缺失值；</h3><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line"></span><br><span class="line">df.dropna()</span><br></pre></td></tr></table></figure><h3 id="（3）使用-matplotlib-生成折线图，反映每月的销量情况，并把图形保存为本地文件-one-jpg；"><a href="#（3）使用-matplotlib-生成折线图，反映每月的销量情况，并把图形保存为本地文件-one-jpg；" class="headerlink" title="（3）使用 matplotlib 生成折线图，反映每月的销量情况，并把图形保存为本地文件 one.jpg；"></a>（3）使用 matplotlib 生成折线图，反映每月的销量情况，并把图形保存为本地文件 one.jpg；</h3><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line">df.dropna()</span><br><span class="line">df[<span class="string">&#x27;日期&#x27;</span>] = df[<span class="string">&#x27;日期&#x27;</span>].apply(<span class="keyword">lambda</span> x: x[:<span class="number">7</span>])</span><br><span class="line"><span class="comment"># print(df[&#x27;日期&#x27;])</span></span><br><span class="line">data_quantity = df.iloc[:,<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># print(data_quantity)</span></span><br><span class="line">group_month_quantity = data_quantity.groupby(<span class="string">&#x27;日期&#x27;</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="comment"># print(group_month_quantity)</span></span><br><span class="line">group_month_quantity.plot()</span><br><span class="line">plt.savefig(<span class="string">&#x27;one.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112223126235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（4）按年进行统计，使用-matplotlib-绘制柱状图显示每年的营业额，并把图形保存为本地文件-two-jpg；"><a href="#（4）按年进行统计，使用-matplotlib-绘制柱状图显示每年的营业额，并把图形保存为本地文件-two-jpg；" class="headerlink" title="（4）按年进行统计，使用 matplotlib 绘制柱状图显示每年的营业额，并把图形保存为本地文件 two.jpg；"></a>（4）按年进行统计，使用 matplotlib 绘制柱状图显示每年的营业额，并把图形保存为本地文件 two.jpg；</h3><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line">df.dropna()</span><br><span class="line">df[<span class="string">&#x27;日期&#x27;</span>] = df[<span class="string">&#x27;日期&#x27;</span>].apply(<span class="keyword">lambda</span> x: x[:<span class="number">4</span>])</span><br><span class="line"><span class="comment"># print(df[&#x27;日期&#x27;])</span></span><br><span class="line">data_quantity = df.iloc[:,<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">group_month_quantity = data_quantity.groupby(<span class="string">&#x27;日期&#x27;</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="comment"># print(group_month_quantity)</span></span><br><span class="line">group_month_quantity.plot.bar()</span><br><span class="line">plt.savefig(<span class="string">&#x27;two.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112223253561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（5）按年进行统计，使用-matplotlib-绘制柱状图显示每年销售量最大的月份及销售额，并把图形保存为本地文件-three-jpg；"><a href="#（5）按年进行统计，使用-matplotlib-绘制柱状图显示每年销售量最大的月份及销售额，并把图形保存为本地文件-three-jpg；" class="headerlink" title="（5）按年进行统计，使用 matplotlib 绘制柱状图显示每年销售量最大的月份及销售额，并把图形保存为本地文件 three.jpg；"></a>（5）按年进行统计，使用 matplotlib 绘制柱状图显示每年销售量最大的月份及销售额，并把图形保存为本地文件 three.jpg；</h3><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line">df.dropna()</span><br><span class="line">df[<span class="string">&#x27;日期&#x27;</span>] = df[<span class="string">&#x27;日期&#x27;</span>].apply(<span class="keyword">lambda</span> x: x[:<span class="number">4</span>])</span><br><span class="line"><span class="comment"># print(df[&#x27;日期&#x27;])</span></span><br><span class="line">data_quantity = df.iloc[:,<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># print(data_quantity)</span></span><br><span class="line">group_month_quantity = data_quantity.groupby(<span class="string">&#x27;日期&#x27;</span>).<span class="built_in">max</span>()</span><br><span class="line"><span class="comment"># print(group_month_quantity)</span></span><br><span class="line">group_month_quantity.plot.bar()</span><br><span class="line">plt.savefig(<span class="string">&#x27;three.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h4><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112223346284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="（6）按年度统计该商品的营业额数据，使用-matplotlib-生成饼状图显示每年都的营业额分布情况，并把图形保存为本地文件-four-jpg。"><a href="#（6）按年度统计该商品的营业额数据，使用-matplotlib-生成饼状图显示每年都的营业额分布情况，并把图形保存为本地文件-four-jpg。" class="headerlink" title="（6）按年度统计该商品的营业额数据，使用 matplotlib 生成饼状图显示每年都的营业额分布情况，并把图形保存为本地文件 four.jpg。"></a>（6）按年度统计该商品的营业额数据，使用 matplotlib 生成饼状图显示每年都的营业额分布情况，并把图形保存为本地文件 four.jpg。</h3><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.family&#x27;</span>] = <span class="string">&#x27;SimHei&#x27;</span></span><br><span class="line"></span><br><span class="line">df = pd.DataFrame(pd.read_csv(<span class="string">&#x27;data.csv&#x27;</span>,encoding=<span class="string">&#x27;gbk&#x27;</span>))</span><br><span class="line">df.dropna()</span><br><span class="line">df[<span class="string">&#x27;日期&#x27;</span>] = df[<span class="string">&#x27;日期&#x27;</span>].apply(<span class="keyword">lambda</span> x: x[:<span class="number">4</span>])</span><br><span class="line"><span class="comment"># print(df[&#x27;日期&#x27;])</span></span><br><span class="line">data_quantity = df.iloc[:,<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># print(data_quantity)</span></span><br><span class="line">group_month_quantity = data_quantity.groupby(<span class="string">&#x27;日期&#x27;</span>).<span class="built_in">sum</span>()</span><br><span class="line"><span class="comment"># print(group_month_quantity)</span></span><br><span class="line">group_month_quantity.plot.pie(subplots=<span class="literal">True</span>)</span><br><span class="line">plt.savefig(<span class="string">&#x27;four.jpg&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h4><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112223440838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1、 熟悉 numpy 库常用方法的使用&lt;br&gt;2、 熟悉 pandas 库的基本使用&lt;br&gt;3、 能够利用 matplot</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验十一 Tkinter的使用（2）</title>
    <link href="http://example.com/2021/04/05/python-experiment-11/"/>
    <id>http://example.com/2021/04/05/python-experiment-11/</id>
    <published>2021-04-05T09:53:43.000Z</published>
    <updated>2021-04-05T09:57:02.634Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>掌握界面程序的设计</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目：用户登陆界面程序"><a href="#题目：用户登陆界面程序" class="headerlink" title="题目：用户登陆界面程序"></a>题目：用户登陆界面程序</h3><p>编写一个用户登录界面，用户可以登录账户信息，如果账户已经存在，可以直接登录，登录名或者登录密码输入错误会提示，如果账户不存在，提示用户注册，点击注册进去注册页面，输入注册信息，确定后便可以返回登录界面进行登录。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line"></span><br><span class="line">window.title(<span class="string">&#x27;登 录&#x27;</span>)</span><br><span class="line"></span><br><span class="line">window.geometry(<span class="string">&#x27;500x400&#x27;</span>)</span><br><span class="line"></span><br><span class="line">l1 = tk.Label(window,text=<span class="string">&#x27;用户名：&#x27;</span>,font= <span class="number">12</span>).place(x=<span class="number">100</span>,y=<span class="number">82</span>)</span><br><span class="line">l2 = tk.Label(window,text=<span class="string">&#x27;密  码：&#x27;</span>,font= <span class="number">12</span>).place(x=<span class="number">100</span>,y=<span class="number">152</span>)</span><br><span class="line"></span><br><span class="line">var_user_name = tk.StringVar()</span><br><span class="line">entry_user_name = tk.Entry(window,textvariable=var_user_name,font= <span class="number">18</span>,width=<span class="number">30</span>,bd =<span class="number">5</span>)</span><br><span class="line">entry_user_name.place(x=<span class="number">180</span>,y=<span class="number">80</span>)</span><br><span class="line"></span><br><span class="line">var_user_password = tk.StringVar()</span><br><span class="line">entry_user_password = tk.Entry(window,textvariable=var_user_password,show=<span class="string">&#x27;*&#x27;</span>,font= <span class="number">18</span>,width=<span class="number">30</span>,bd =<span class="number">5</span>)</span><br><span class="line">entry_user_password.place(x=<span class="number">180</span>,y=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_login_in</span>():</span></span><br><span class="line">    user_name = var_user_name.get()</span><br><span class="line">    user_password = var_user_password.get()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_info.pickle&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> user_file:</span><br><span class="line">            user_info = pickle.load(user_file)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_info.pickle&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> user_file:</span><br><span class="line">            user_info = &#123;<span class="string">&#x27;admin&#x27;</span>:<span class="string">&#x27;admin&#x27;</span>&#125;</span><br><span class="line">            pickle.dump(user_info,user_file)</span><br><span class="line">    <span class="keyword">if</span> user_name ==<span class="string">&#x27; &#x27;</span> <span class="keyword">or</span> user_password == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">        tk.messagebox.showerror(message=<span class="string">&#x27;用户名或密码不能为空！&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> user_name <span class="keyword">in</span> user_info:</span><br><span class="line">        <span class="keyword">if</span> user_password == user_info[user_name]:</span><br><span class="line">            tk.messagebox.showinfo(title=<span class="string">&#x27;welcome&#x27;</span>,message=<span class="string">&#x27;欢迎您：&#x27;</span>+user_name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tk.messagebox.showerror(message=<span class="string">&#x27;密码错误！&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        is_signup = tk.messagebox.askyesno(<span class="string">&#x27;欢迎&#x27;</span>,<span class="string">&#x27;您还没有注册，是否现在注册&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> is_signup:</span><br><span class="line">            user_sign_up()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_sign_up</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">registration</span>():</span></span><br><span class="line">        input_name = new_name.get()</span><br><span class="line">        input_password = new_password.get()</span><br><span class="line">        input_password_confirm =new_password_confirm.get()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_info.pickle&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> user_file:</span><br><span class="line">                exist_user_info = pickle.load((user_file))</span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">            exist_user_info = &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> input_name <span class="keyword">in</span> exist_user_info:</span><br><span class="line">            tk.messagebox.showerror(<span class="string">&#x27;错误&#x27;</span>,<span class="string">&#x27;用户名已存在！&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> input_password ==<span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> input_name ==<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            tk.messagebox.showerror(<span class="string">&#x27;错误&#x27;</span>,<span class="string">&#x27;用户名或密码不能为空！&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> input_password != input_password_confirm:</span><br><span class="line">            tk.messagebox.showerror(<span class="string">&#x27;错误&#x27;</span>,<span class="string">&#x27;密码前后不一致！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            exist_user_info[input_name] = input_password</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user_info.pickle&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> user_file:</span><br><span class="line">                pickle.dump(exist_user_info,user_file)</span><br><span class="line">            tk.messagebox.showinfo(<span class="string">&#x27;欢迎&#x27;</span>,<span class="string">&#x27;注册成功！&#x27;</span>)</span><br><span class="line">            window_sign_up.destroy()</span><br><span class="line">    window_sign_up = tk.Toplevel(window)</span><br><span class="line">    window_sign_up.geometry(<span class="string">&#x27;350x200&#x27;</span>)</span><br><span class="line">    window_sign_up.title(<span class="string">&#x27;注册&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    new_name = tk.StringVar()</span><br><span class="line">    tk.Label(window_sign_up,text=<span class="string">&#x27;用户名：&#x27;</span>).place(x=<span class="number">10</span>,y=<span class="number">10</span>)</span><br><span class="line">    tk.Entry(window_sign_up,textvariable=new_name).place(x=<span class="number">150</span>,y=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    new_password = tk.StringVar()</span><br><span class="line">    tk.Label(window_sign_up,text=<span class="string">&#x27;请输入密码：&#x27;</span>).place(x=<span class="number">10</span>,y=<span class="number">50</span>)</span><br><span class="line">    tk.Entry(window_sign_up,textvariable=new_password,show=<span class="string">&#x27;*&#x27;</span>).place(x=<span class="number">150</span>,y=<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    new_password_confirm = tk.StringVar()</span><br><span class="line">    tk.Label(window_sign_up,text=<span class="string">&#x27;请再次确认密码：&#x27;</span>).place(x=<span class="number">10</span>,y=<span class="number">90</span>)</span><br><span class="line">    tk.Entry(window_sign_up,textvariable=new_password_confirm,show=<span class="string">&#x27;*&#x27;</span>).place(x=<span class="number">150</span>,y=<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">    bt_confirm_sign_up = tk.Button(window_sign_up,text=<span class="string">&#x27;确认注册&#x27;</span>,command=registration)</span><br><span class="line">    bt_confirm_sign_up.place(x=<span class="number">150</span>,y=<span class="number">130</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user_sign_out</span>():</span></span><br><span class="line">    window.destroy()</span><br><span class="line">bt_login = tk.Button(window,text=<span class="string">&#x27;登    录&#x27;</span>,width=<span class="number">30</span>,font= <span class="number">18</span>,bg=<span class="string">&#x27;DarkTurquoise&#x27;</span>,activebackground=<span class="string">&#x27;Turquoise&#x27;</span>,command=user_login_in)</span><br><span class="line">bt_login.place(x=<span class="number">150</span>,y=<span class="number">210</span>)</span><br><span class="line"></span><br><span class="line">bt_register = tk.Button(window,text=<span class="string">&#x27;注册&#x27;</span>,width=<span class="number">25</span>,command= user_sign_up)</span><br><span class="line">bt_register.place(x=<span class="number">150</span>,y=<span class="number">270</span>)</span><br><span class="line"></span><br><span class="line">bt_exit = tk.Button(window,text=<span class="string">&#x27;退出&#x27;</span>,width=<span class="number">5</span>,command = user_sign_out)</span><br><span class="line">bt_exit.place(x=<span class="number">350</span>,y=<span class="number">270</span>)</span><br><span class="line">window.mainloop()</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目：tkinter-版猜数游戏"><a href="#题目：tkinter-版猜数游戏" class="headerlink" title="题目：tkinter 版猜数游戏"></a>题目：tkinter 版猜数游戏</h3><p>使用 Python 标准库 tkinter 编写 GUI 版本的猜数游戏。 每次猜数之前要启动游戏并设置猜数范围和最大猜测次数等参数， 退出游戏时显示战绩（共玩几次， 猜对几次） 信息。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">number = random.randint(<span class="number">0</span>,<span class="number">1024</span>)</span><br><span class="line">running = <span class="literal">True</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">num_max = <span class="number">1024</span></span><br><span class="line">num_min = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eBtnClose</span>(<span class="params">event</span>):</span></span><br><span class="line">    root.destory()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eBtnGuess</span>(<span class="params">evnet</span>):</span></span><br><span class="line">    <span class="keyword">global</span> num_max</span><br><span class="line">    <span class="keyword">global</span> num_min</span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="keyword">global</span> running</span><br><span class="line">    <span class="keyword">if</span> running:</span><br><span class="line">        val_a = <span class="built_in">int</span>(entry_a.get())</span><br><span class="line">        <span class="keyword">if</span> val_a ==number:</span><br><span class="line">            labelqval(<span class="string">&quot;恭喜你答对啦！&quot;</span>)</span><br><span class="line">            num +=<span class="number">1</span></span><br><span class="line">            running =<span class="literal">False</span></span><br><span class="line">            numGuess()</span><br><span class="line">        <span class="keyword">elif</span> val_a &lt;number:</span><br><span class="line">            <span class="keyword">if</span> val_a &gt;num_min:</span><br><span class="line">                num_min = val_a</span><br><span class="line">                num +=<span class="number">1</span></span><br><span class="line">                label_tip_min.config(label_tip_min,text=num_min)</span><br><span class="line">            labelqval(<span class="string">&quot;小了哦&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> val_a &lt; num_max:</span><br><span class="line">                num_max = val_a</span><br><span class="line">                num +=<span class="number">1</span></span><br><span class="line">                label_tip_max.config(label_tip_max,text=num_max)</span><br><span class="line">            labelqval(<span class="string">&quot;大了哦&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        labelqval(<span class="string">&#x27;你已经答对了&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numGuess</span>():</span></span><br><span class="line">    <span class="keyword">if</span> num ==<span class="number">1</span>:</span><br><span class="line">        labelqval(<span class="string">&#x27;居然一次就答对了&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> num&lt;<span class="number">10</span>:</span><br><span class="line">        labelqval(<span class="string">&#x27;十次以内就答对了，继续加油！尝试次数为：&#x27;</span>+<span class="built_in">str</span>(num))</span><br><span class="line">    <span class="keyword">elif</span> num&lt;<span class="number">50</span>:</span><br><span class="line">        labelqval(<span class="string">&#x27;很不错！尝试次数为：&#x27;</span>+<span class="built_in">str</span>(num))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">labelqval</span>(<span class="params">vText</span>):</span></span><br><span class="line">    label_val_q.config(label_val_q,text=vText)</span><br><span class="line"></span><br><span class="line">root = tk.Tk(className=<span class="string">&quot;猜数游戏&quot;</span>)</span><br><span class="line">root.geometry(<span class="string">&quot;400x50&quot;</span>)</span><br><span class="line">line_a_tip = tk.Frame(root)</span><br><span class="line">label_tip_max = tk.Label(line_a_tip,text=num_max)</span><br><span class="line">label_tip_min = tk.Label(line_a_tip,text=num_min)</span><br><span class="line">label_tip_max.pack(side=<span class="string">&quot;top&quot;</span>,fill=<span class="string">&quot;x&quot;</span>)</span><br><span class="line">label_tip_min.pack(side=<span class="string">&quot;bottom&quot;</span>,fill=<span class="string">&quot;x&quot;</span>)</span><br><span class="line">line_a_tip.pack(side=<span class="string">&quot;left&quot;</span>,fill=<span class="string">&quot;y&quot;</span>)</span><br><span class="line">line_question = tk.Frame(root)</span><br><span class="line">label_val_q = tk.Label(line_question,width=<span class="string">&quot;80&quot;</span>)</span><br><span class="line">label_val_q.pack(side=<span class="string">&quot;left&quot;</span>)</span><br><span class="line">line_question.pack(side=<span class="string">&quot;top&quot;</span>,fill=<span class="string">&quot;x&quot;</span>)</span><br><span class="line">line_input = tk.Frame(root)</span><br><span class="line">entry_a =tk.Entry(line_input,width=<span class="string">&quot;40&quot;</span>)</span><br><span class="line">btnGuess = tk.Button(line_input,text = <span class="string">&quot;猜&quot;</span>)</span><br><span class="line">entry_a.pack(side=<span class="string">&quot;left&quot;</span>)</span><br><span class="line">entry_a.bind(<span class="string">&#x27;&lt;Return&gt;&#x27;</span>,eBtnGuess)</span><br><span class="line">btnGuess.bind((<span class="string">&#x27;&lt;Button-1&gt;&#x27;</span>),eBtnGuess)</span><br><span class="line">btnGuess.pack(side=<span class="string">&quot;left&quot;</span>)</span><br><span class="line">line_input.pack(side=<span class="string">&quot;top&quot;</span>,fill=<span class="string">&quot;x&quot;</span>)</span><br><span class="line">line_btn = tk.Frame(root)</span><br><span class="line">btnClose = tk.Button(line_btn,text=<span class="string">&quot;关闭&quot;</span>)</span><br><span class="line">btnClose.bind(<span class="string">&#x27;&lt;Button-1&gt;&#x27;</span>,eBtnClose)</span><br><span class="line">btnClose.pack(side=<span class="string">&quot;left&quot;</span>)</span><br><span class="line">line_btn.pack(side=<span class="string">&quot;top&quot;</span>)</span><br><span class="line">labelqval(<span class="string">&quot;请输入0到1024之间任意整数：&quot;</span>)</span><br><span class="line">entry_a.focus_set()</span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;掌握界面程序的设计&lt;/p&gt;
&lt;h1 id=&quot;实验内容&quot;&gt;&lt;a href=&quot;#实验内容&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验十 Tkinter的使用（1）</title>
    <link href="http://example.com/2021/04/05/python-experiment-10/"/>
    <id>http://example.com/2021/04/05/python-experiment-10/</id>
    <published>2021-04-05T09:49:55.000Z</published>
    <updated>2021-04-05T09:52:08.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ol><li>掌握 tkinter 的使用</li><li>熟悉可视化界面的设计方法<h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3>完成以下代码，熟悉 tkinter 各个部件的使用<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#(1) 创建主窗口及 Label 部件（标签）创建使用</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="comment"># SY11-1</span></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;First Example&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">l = tk.Label(window,text =<span class="string">&#x27;你好！欢迎使用Python tkinter!&#x27;</span>,bg = <span class="string">&#x27;AliceBlue&#x27;</span>,font = (<span class="string">&#x27;Arial&#x27;</span>,<span class="number">12</span>), width=<span class="number">30</span>, height=<span class="number">2</span>)</span><br><span class="line">l.pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（2）Button 窗口部件</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;First Example&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">var = tk.StringVar()</span><br><span class="line">l = tk.Label(window,textvariable = var,bg = <span class="string">&#x27;AliceBlue&#x27;</span>,</span><br><span class="line">    font = (<span class="string">&#x27;Arial&#x27;</span>,<span class="number">12</span>), width=<span class="number">30</span>, height=<span class="number">2</span>)</span><br><span class="line">l.pack()</span><br><span class="line">on_hit = <span class="literal">False</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">touch</span>():</span></span><br><span class="line">    <span class="keyword">global</span> on_hit</span><br><span class="line">    <span class="keyword">if</span> on_hit == <span class="literal">False</span>:</span><br><span class="line">        on_hit = <span class="literal">True</span></span><br><span class="line">        var.<span class="built_in">set</span>(<span class="string">&#x27;你点击了确认按钮&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        on_hit = <span class="literal">False</span></span><br><span class="line">        var.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">b = tk.Button(window,text=<span class="string">&#x27;确认&#x27;</span>,font=(<span class="string">&#x27;Arial&#x27;</span>,<span class="number">12</span>),width = <span class="number">10</span>,</span><br><span class="line">              height=<span class="number">1</span>,command = touch)</span><br><span class="line">b.pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（3）Entry 窗口部件</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;SY11-3&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">e1 = tk.Entry(window,show=<span class="string">&#x27;*&#x27;</span>,font=(<span class="string">&#x27;Arial&#x27;</span>,<span class="number">14</span>))</span><br><span class="line">e2 = tk.Entry(window,show=<span class="literal">None</span>,font=(<span class="string">&#x27;Arial&#x27;</span>,<span class="number">14</span>))</span><br><span class="line">e1.pack()</span><br><span class="line">e2.pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（4）Text 窗口部件</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;SY11-4&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">e = tk.Entry(window,show = <span class="literal">None</span>)</span><br><span class="line">e.pack()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_point</span>():</span></span><br><span class="line">    var = e.get()</span><br><span class="line">    t.insert(<span class="string">&#x27;insert&#x27;</span>,var)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_end</span>():</span></span><br><span class="line">    var = e.get()</span><br><span class="line">    t.insert(<span class="string">&#x27;end&#x27;</span>,var)</span><br><span class="line">b1 = tk.Button(window,text=<span class="string">&#x27;insert point&#x27;</span>,width = <span class="number">10</span>,</span><br><span class="line">               height = <span class="number">2</span>,command = insert_point)</span><br><span class="line">b1.pack()</span><br><span class="line">b2 = tk.Button(window,text=<span class="string">&#x27;insert end&#x27;</span>,width = <span class="number">10</span>,</span><br><span class="line">               height = <span class="number">2</span>,command = insert_end)</span><br><span class="line">b2.pack()</span><br><span class="line">t = tk.Text(window,height = <span class="number">3</span>)</span><br><span class="line">t.pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（5）Canvas 窗口部件</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk <span class="comment"># 使用 Tkinter 前需要先导入</span></span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;My Window&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">canvas = tk.Canvas(window, bg=<span class="string">&#x27;AliceBlue&#x27;</span>, height=<span class="number">200</span>, width=<span class="number">500</span>)</span><br><span class="line">image_file = tk.PhotoImage(file=<span class="string">&#x27;123.gif&#x27;</span>)</span><br><span class="line">image = canvas.create_image(<span class="number">250</span>, <span class="number">0</span>, anchor=<span class="string">&#x27;n&#x27;</span>,image=image_file)</span><br><span class="line">x0, y0, x1, y1 = <span class="number">100</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">150</span></span><br><span class="line">line = canvas.create_line(x0-<span class="number">50</span>, y0-<span class="number">50</span>, x1-<span class="number">50</span>, y1-<span class="number">50</span>)</span><br><span class="line">oval = canvas.create_oval(x0+<span class="number">120</span>, y0+<span class="number">50</span>, x1+<span class="number">120</span>, y1+<span class="number">50</span>, fill=<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">arc = canvas.create_arc(x0, y0+<span class="number">50</span>, x1, y1+<span class="number">50</span>, start=<span class="number">0</span>, extent=<span class="number">180</span>)</span><br><span class="line">rect = canvas.create_rectangle(<span class="number">330</span>, <span class="number">30</span>, <span class="number">330</span>+<span class="number">20</span>, <span class="number">30</span>+<span class="number">20</span>)</span><br><span class="line">canvas.pack()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moveit</span>():</span></span><br><span class="line">    canvas.move(rect, <span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">b = tk.Button(window, text=<span class="string">&#x27;move item&#x27;</span>,command=moveit).pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（6）messageBox 窗口部件</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox</span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;My Window&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hit_me</span>():</span></span><br><span class="line"> tkinter.messagebox.showinfo(title=<span class="string">&#x27;Hi&#x27;</span>, message=<span class="string">&#x27;你好！&#x27;</span>)</span><br><span class="line"> <span class="comment"># tkinter.messagebox.showwarning(title=&#x27;Hi&#x27;, message=&#x27;有警告！&#x27;) # 提出</span></span><br><span class="line"> <span class="comment"># tkinter.messagebox.showerror(title=&#x27;Hi&#x27;, message=&#x27;出错了！&#x27;) # 提出错</span></span><br><span class="line"> <span class="comment"># print(tkinter.messagebox.askquestion(title=&#x27;Hi&#x27;, message=&#x27;你好！&#x27;)) # 询问选择对话窗 return &#x27;yes&#x27;, &#x27;no&#x27;</span></span><br><span class="line"> <span class="comment"># print(tkinter.messagebox.askyesno(title=&#x27;Hi&#x27;, message=&#x27;你好！&#x27;)) # return&#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class="line"> <span class="comment"># print(tkinter.messagebox.askokcancel(title=&#x27;Hi&#x27;, message=&#x27;你好！&#x27;)) # return&#x27;True&#x27;, &#x27;False&#x27;</span></span><br><span class="line">tk.Button(window, text=<span class="string">&#x27;hit me&#x27;</span>, bg=<span class="string">&#x27;green&#x27;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">14</span>), command=hit_me).pack()</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#（7）窗口部件三种放置方式 pack/grid/place</span></span><br><span class="line"><span class="comment">#7-1</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;My Window&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        tk.Label(window, text=<span class="number">1</span>).grid(row=i, column=j, padx=<span class="number">10</span>, pady=<span class="number">10</span>,ipadx=<span class="number">10</span>, ipady=<span class="number">10</span>)</span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#7-2</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;My Window&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">tk.Label(window, text=<span class="string">&#x27;P&#x27;</span>, fg=<span class="string">&#x27;red&#x27;</span>).pack(side=<span class="string">&#x27;top&#x27;</span>) <span class="comment"># 上</span></span><br><span class="line">tk.Label(window, text=<span class="string">&#x27;P&#x27;</span>, fg=<span class="string">&#x27;red&#x27;</span>).pack(side=<span class="string">&#x27;bottom&#x27;</span>) <span class="comment"># 下</span></span><br><span class="line">tk.Label(window, text=<span class="string">&#x27;P&#x27;</span>, fg=<span class="string">&#x27;red&#x27;</span>).pack(side=<span class="string">&#x27;left&#x27;</span>) <span class="comment"># 左</span></span><br><span class="line">tk.Label(window, text=<span class="string">&#x27;P&#x27;</span>, fg=<span class="string">&#x27;red&#x27;</span>).pack(side=<span class="string">&#x27;right&#x27;</span>) <span class="comment"># 右</span></span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#7-3</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&#x27;My Window&#x27;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;500x300&#x27;</span>)</span><br><span class="line">tk.Label(window, text=<span class="string">&#x27;Pl&#x27;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">20</span>), ).place(x=<span class="number">50</span>, y=<span class="number">100</span>, anchor=<span class="string">&#x27;nw&#x27;</span>)</span><br><span class="line">window.mainloop()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;掌握 tkinter 的使用&lt;/li&gt;
&lt;li&gt;熟悉可视化界面的设计方法&lt;h1 id=&quot;实验内容&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验九 文件与数据格式化</title>
    <link href="http://example.com/2021/04/05/python-experiment-9/"/>
    <id>http://example.com/2021/04/05/python-experiment-9/</id>
    <published>2021-04-05T09:47:20.000Z</published>
    <updated>2021-04-05T09:49:25.630Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ol><li>掌握文件的基本操作</li><li>理解一、二维和高维数据的格式化过程</li><li>掌握 csv 和 json 格式的相互转换</li><li>综合应用组合数据类型与 CSV 和 JSON 数据格式编写简单的应用程序<h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3>将提供的 test.csv 文件，具体内容如下：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112024827802.png" alt="在这里插入图片描述"><br>编程读入该文件，转换成 JSON 格式文件，并以文件名 out.json 输出。转换<br>后的结果如下所示：<br>[<br> {<pre><code>  &quot;同比&quot;: &quot;120.7&quot;,  &quot;城市&quot;: &quot;北京&quot;,  &quot;定基&quot;: &quot;121.4&quot;,  &quot;环比&quot;: &quot;101.5&quot;</code></pre>  },<br>  {<pre><code>  &quot;同比&quot;: &quot;127.3&quot;,  &quot;城市&quot;: &quot;上海&quot;,  &quot;定基&quot;: &quot;127.8&quot;,  &quot;环比&quot;: &quot;101.2&quot;</code></pre>  }<br> ….<br>]<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法一：</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">fr = <span class="built_in">open</span>(<span class="string">&quot;test.csv&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fr:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">    ls.append(line.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">fr.close()</span><br><span class="line"></span><br><span class="line">fw = <span class="built_in">open</span>(<span class="string">&quot;test.json&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(ls)):</span><br><span class="line">    ls[i]= <span class="built_in">dict</span>(<span class="built_in">zip</span>(ls[<span class="number">0</span>],ls[i]))</span><br><span class="line">json.dump(ls[<span class="number">1</span>:],fw,sort_keys=<span class="literal">True</span>,indent=<span class="number">4</span>,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">fw.close()</span><br><span class="line"><span class="comment">#方法二：</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;test.csv&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fr:</span><br><span class="line">    ls = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fr:</span><br><span class="line">        line = line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        ls.append(line.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">    fr.close()</span><br><span class="line">fw = <span class="built_in">open</span>(<span class="string">&quot;test.json&quot;</span>,<span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(ls)):</span><br><span class="line">    ls[i]= <span class="built_in">dict</span>(<span class="built_in">zip</span>(ls[<span class="number">0</span>],ls[i]))</span><br><span class="line">json.dump(ls[<span class="number">1</span>:],fw,sort_keys=<span class="literal">True</span>,indent=<span class="number">4</span>,ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">fw.close()</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3>编写程序制作英文学习字典，词典基本功能如下：<br>(1) 程序读取源文件路径下的 txt 格式词典文件，若没有就创建一个。 词典文件存储方式为 “英文单词 中文单词”,每行仅有一对中英文释义；<br>(2) 程序有添加功能，输入英文单词，如果没有可以添加中文释义，如果有就显示”已经存在，不能添加”；<br>(3) 程序有查询功能，如果存在，则显示其中文释义，不存在就显示不存在；<br>(4) 程序有正常退出的操作。<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">keys = []</span><br><span class="line">dic = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readdict</span>():</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">&quot;dictionary.txt&quot;</span>):</span><br><span class="line">        fr = <span class="built_in">open</span>(<span class="string">&#x27;dictionary.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fr = <span class="built_in">open</span>(<span class="string">&#x27;dictionary.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> fr:</span><br><span class="line">        line = line.replace(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        v = line.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        dic[v[<span class="number">0</span>]]= v[<span class="number">1</span>]</span><br><span class="line">        keys.append(v[<span class="number">0</span>])</span><br><span class="line">    fr.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">writedict</span>(<span class="params">key,value</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;dictionary.txt&#x27;</span>,<span class="string">&#x27;a&#x27;</span>)<span class="keyword">as</span> fw:</span><br><span class="line">        fw.write(key+<span class="string">&#x27;:&#x27;</span>+value+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mydict</span>():</span></span><br><span class="line">    n = <span class="built_in">input</span>(<span class="string">&quot;请输入进入相应模块（添加，查询，退出）&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> n == <span class="string">&quot;添加&quot;</span>:</span><br><span class="line">        key = <span class="built_in">input</span>(<span class="string">&quot;请输入英文单词：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> keys:</span><br><span class="line">            value =<span class="built_in">input</span>(<span class="string">&quot;字典中未找到单词&#x27;&#123;&#125;&#x27;的中文释义，请输入该单词的中文意思，添加进字典中！&quot;</span>.<span class="built_in">format</span>(key))</span><br><span class="line">            dic[key] = value</span><br><span class="line">            keys.append(key)</span><br><span class="line">            writedict(key,value)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;单词&#x27;&#123;&#125;&#x27;已存在，不能添加&quot;</span>.<span class="built_in">format</span>(key))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;查询&quot;</span>:</span><br><span class="line">        key = <span class="built_in">input</span>(<span class="string">&quot;请输入英文单词:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> keys:</span><br><span class="line">            print(<span class="string">&quot;英文单词&#x27;&#123;&#125;&#x27;不在字典内&quot;</span>.<span class="built_in">format</span>(key))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(dic[key])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;退出&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;输入有误&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    readdict()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        n = mydict()</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">main()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;掌握文件的基本操作&lt;/li&gt;
&lt;li&gt;理解一、二维和高维数据的格式化过程&lt;/li&gt;
&lt;li&gt;掌握 csv 和 j</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验八 函数</title>
    <link href="http://example.com/2021/04/05/python-experiment-8/"/>
    <id>http://example.com/2021/04/05/python-experiment-8/</id>
    <published>2021-04-05T09:45:35.000Z</published>
    <updated>2021-04-05T09:46:47.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ol><li>掌握函数的定义与调用过程</li><li>掌握参数的传递方式和传递过程</li><li>理解和使用匿名函数</li><li>理解递归调用的思想和方法</li><li>掌握变量的作用域<h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3>定义求 n!的函数 fact()和求和函数 sum(),在此基础上编程实现 1！+2！+…m!的计算。<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fact</span>(<span class="params">num</span>):</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,num+<span class="number">1</span>):</span><br><span class="line">        result *= i</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum</span>(<span class="params">num</span>):</span></span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,num+<span class="number">1</span>):</span><br><span class="line">        result = result + fact(i)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">num=<span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数m：&quot;</span>))</span><br><span class="line">print(<span class="string">&quot;1!+2!+...+&#123;&#125;!=&#123;&#125;&quot;</span>.<span class="built_in">format</span>(num,<span class="built_in">sum</span>(num)))</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3>定义匿名函数实现求平方，定义判素数函数 list_prime(),该函数可以实现接受任意个数的判断，并将所有素数作为返回值。在此基础上编程实现随机输入任意个数，从中挑选出所有素数，并计算所有素数平方和。<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_prime</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,num):</span><br><span class="line">        <span class="keyword">if</span> (num % i==<span class="number">0</span>):</span><br><span class="line">            <span class="built_in">sum</span> +=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">sum</span>&gt;=<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> pingfang(num)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pingfang</span>(<span class="params">num</span>):</span></span><br><span class="line">    <span class="keyword">return</span> num*num;</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请随机输入任意个数(以逗号分割)：&quot;</span>))</span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="built_in">sum</span> += list_prime(i)</span><br><span class="line">print(<span class="string">&quot;你输入的数组中所有素数的平方和为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">sum</span>))</span><br></pre></td></tr></table></figure><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3>分别定义 numlist()和 charlist()函数，numlist()功能是生成由数字 1-26 构成的列表,charlist()功能是生成由字符 A-Z 构成的列表。在此基础上编写程序实现<br>生成一个字典，具体如下：<br>{1: ‘a’, 2: ‘b’, 3: ‘c’, 4: ‘d’, 5: ‘e’, 6: ‘f’, 7: ‘g’, 8: ‘h’, 9: ‘i’, 10: ‘j’, 11: ‘k’, 12: ‘l’, 13: ‘m’,14: ‘n’, 15: ‘o’, 16: ‘p’, 17: ‘q’, 18: ‘r’, 19: ‘s’, 20: ‘t’, 21: ‘u’, 22: ‘v’, 23: ‘w’, 24: ‘x’, 25: ‘y’,26: ‘z’}<br>遍历字典，输出所有键值为偶数的元素。<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numlist</span>():</span></span><br><span class="line">    num= []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">        num.append(i)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">charlist</span>():</span></span><br><span class="line">    char = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">        char.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+i))</span><br><span class="line">    <span class="keyword">return</span> char</span><br><span class="line">dictionary = <span class="built_in">dict</span>(<span class="built_in">zip</span>(numlist(),charlist()))</span><br><span class="line"><span class="comment"># print(dictionary)</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> dictionary:</span><br><span class="line">    <span class="keyword">if</span> key%<span class="number">2</span> ==<span class="number">0</span>:</span><br><span class="line">        print(dictionary[key])</span><br></pre></td></tr></table></figure><h2 id="练习四"><a href="#练习四" class="headerlink" title="练习四"></a>练习四</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3>绘制科赫雪花，效果如下：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112024337701.png" alt="在这里插入图片描述"><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">koch</span>(<span class="params">size,n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">        turtle.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>,<span class="number">60</span>,-<span class="number">120</span>,<span class="number">60</span>]:</span><br><span class="line">            turtle.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>,n-<span class="number">1</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    turtle.setup(<span class="number">600</span>,<span class="number">600</span>)</span><br><span class="line">    turtle.speed(<span class="number">0</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(-<span class="number">200</span>,<span class="number">100</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.pensize(<span class="number">2</span>)</span><br><span class="line">    level = <span class="number">5</span></span><br><span class="line">    koch(<span class="number">400</span>,level)</span><br><span class="line">    turtle.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">400</span>,level)</span><br><span class="line">    turtle.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">400</span>,level)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.exitonclick()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;掌握函数的定义与调用过程&lt;/li&gt;
&lt;li&gt;掌握参数的传递方式和传递过程&lt;/li&gt;
&lt;li&gt;理解和使用匿名函数&lt;</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验七 阶段测试</title>
    <link href="http://example.com/2021/04/05/python-experiment-7/"/>
    <id>http://example.com/2021/04/05/python-experiment-7/</id>
    <published>2021-04-05T09:44:10.000Z</published>
    <updated>2021-04-05T09:45:07.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h2><p>打印输出如下字符图案。<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112020330204.png" alt="在这里插入图片描述"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">width_top = <span class="number">2</span>*<span class="number">6</span>-<span class="number">1</span>;</span><br><span class="line">width_di = <span class="number">2</span>*<span class="number">5</span>-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">7</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;*&#x27;</span>*(<span class="number">2</span>*i-<span class="number">1</span>)</span><br><span class="line">    print(<span class="built_in">str</span>.center(width_top,<span class="string">&#x27; &#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;*&#x27;</span> * (<span class="number">2</span> * i - <span class="number">1</span>)</span><br><span class="line">    print(<span class="built_in">str</span>.center(width_top,<span class="string">&#x27; &#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h2><p>输入一个年份，判断并输出该年份是否为闰年。。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">date = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个年份：&quot;</span>))</span><br><span class="line"><span class="comment"># print(date)</span></span><br><span class="line"><span class="keyword">if</span> (date%<span class="number">100</span>!=<span class="number">0</span> <span class="keyword">and</span> date%<span class="number">4</span>==<span class="number">0</span>) <span class="keyword">or</span> (date%<span class="number">400</span>==<span class="number">0</span>):</span><br><span class="line">    print(<span class="string">&quot;&#123;&#125;年是闰年&quot;</span>.<span class="built_in">format</span>(date))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;&#123;&#125;年不是闰年&quot;</span>.<span class="built_in">format</span>(date))</span><br></pre></td></tr></table></figure><h2 id="题目三"><a href="#题目三" class="headerlink" title="题目三"></a>题目三</h2><p>编写一个程序，输入任意一行字符，并将其中的小写字母转换为大写字母，然后打印输出，注意：非小写字母不转换。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;请输入一行字符：&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="number">97</span>&lt;=<span class="built_in">ord</span>(i)&lt;=<span class="number">122</span>:</span><br><span class="line">        i = <span class="built_in">chr</span>(<span class="built_in">ord</span>(i)-<span class="number">32</span>)</span><br><span class="line">    print(i,end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="题目四"><a href="#题目四" class="headerlink" title="题目四"></a>题目四</h2><p>使用turtle库画一个心形，例如：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112020940184.png" alt="在这里插入图片描述"></p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">color(<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">begin_fill()</span><br><span class="line">left(<span class="number">140</span>)</span><br><span class="line">fd(<span class="number">135</span>)</span><br><span class="line">right(<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">circle(<span class="number">60</span>,-<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">backward(<span class="number">35</span>)</span><br><span class="line">right(<span class="number">100</span>)</span><br><span class="line">forward(<span class="number">35</span>)</span><br><span class="line">circle(-<span class="number">60</span>,<span class="number">180</span>)</span><br><span class="line">fd(<span class="number">135</span>)</span><br><span class="line">end_fill()</span><br><span class="line">exitonclick()</span><br></pre></td></tr></table></figure><h2 id="题目五"><a href="#题目五" class="headerlink" title="题目五"></a>题目五</h2><p>编写一个程序来计算输入的一行字符串中的单词频率（单词不区分大小写），并按字母顺序对键进行排序，然后输出所有单词及其出现的次数。 提示：对一个字典counts内的单词按字母顺序排序，代码可以为：sorted_words = sorted(counts.keys())</p><p>例如，输入：</p><p>New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.</p><p>则输出为：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112021105676.png" alt="在这里插入图片描述"></p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;请输入一行字符串：&quot;</span>)</span><br><span class="line"></span><br><span class="line">word_dic=&#123;&#125;</span><br><span class="line">word =<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="number">48</span>&lt;=<span class="built_in">ord</span>(i)&lt;=<span class="number">57</span> <span class="keyword">or</span> <span class="number">97</span>&lt;=<span class="built_in">ord</span>(i)&lt;=<span class="number">122</span>:</span><br><span class="line">        word = word+i</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">65</span>&lt;=<span class="built_in">ord</span>(i)&lt;=<span class="number">90</span>:</span><br><span class="line">        i = <span class="built_in">chr</span>(<span class="built_in">ord</span>(i)+<span class="number">32</span>)</span><br><span class="line">        word = word+i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> word == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            word_value = &#123;word: <span class="number">1</span>&#125;</span><br><span class="line">            <span class="keyword">if</span> (word <span class="keyword">in</span> word_dic.keys()):</span><br><span class="line">                word_dic[word] += <span class="number">1</span></span><br><span class="line">                word = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                word_dic.update(word_value)</span><br><span class="line">                word = <span class="string">&quot;&quot;</span></span><br><span class="line">sorted_word = <span class="built_in">sorted</span>(word_dic.items(),key=<span class="keyword">lambda</span> d:d[<span class="number">0</span>])</span><br><span class="line"><span class="comment"># print(sorted_word)</span></span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> sorted_word:</span><br><span class="line">    print(<span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(key,value))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目一&quot;&gt;&lt;a href=&quot;#题目一&quot; class=&quot;headerlink&quot; title=&quot;题目一&quot;&gt;&lt;/a&gt;题目一&lt;/h2&gt;&lt;p&gt;打印输出如下字符图案。&lt;br&gt;￼&lt;img lazyload src=&quot;/images/loading.svg&quot; data-src=&quot;</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验六</title>
    <link href="http://example.com/2021/04/05/python-experiment-6/"/>
    <id>http://example.com/2021/04/05/python-experiment-6/</id>
    <published>2021-04-05T09:37:30.000Z</published>
    <updated>2021-04-07T02:51:35.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1、 培养分析问题并对进行建模的能力。<br>2、 熟练使用组合数据类型解决实际问题。<br>3、 熟练运用选择结构和循环结构解决实际问题。</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>统计《三国演义》中人物出场次数最多的前 20 人。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba <span class="keyword">as</span> jie</span><br><span class="line"></span><br><span class="line">text = (<span class="built_in">open</span>(<span class="string">&#x27;三国演义.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)).read()</span><br><span class="line">words = jie.lcut(text)</span><br><span class="line">nowords =&#123;<span class="string">&quot;这个&quot;</span>,<span class="string">&quot;引兵&quot;</span>,<span class="string">&quot;次日&quot;</span>,<span class="string">&quot;人马&quot;</span>,<span class="string">&quot;不知&quot;</span>,<span class="string">&quot;汉中&quot;</span>,<span class="string">&quot;众将&quot;</span>,</span><br><span class="line"><span class="string">&quot;只见&quot;</span>,<span class="string">&quot;大喜&quot;</span>,<span class="string">&quot;天下&quot;</span>,<span class="string">&quot;东吴&quot;</span>,<span class="string">&quot;于是&quot;</span>,<span class="string">&quot;今日&quot;</span>,<span class="string">&quot;不敢&quot;</span>,<span class="string">&quot;魏兵&quot;</span>,</span><br><span class="line"><span class="string">&quot;陛下&quot;</span>,<span class="string">&quot;太守&quot;</span>,<span class="string">&quot;天子&quot;</span>,<span class="string">&quot;一面&quot;</span>,<span class="string">&quot;原来&quot;</span>,<span class="string">&quot;令人&quot;</span>,<span class="string">&quot;江东&quot;</span>,<span class="string">&quot;喊声&quot;</span>,</span><br><span class="line"><span class="string">&quot;下马&quot;</span>,<span class="string">&quot;何不&quot;</span>,<span class="string">&quot;大军&quot;</span>,<span class="string">&quot;忽报&quot;</span>,<span class="string">&quot;先生&quot;</span>,<span class="string">&quot;百姓&quot;</span>,<span class="string">&quot;然后&quot;</span>,<span class="string">&quot;何故&quot;</span>,</span><br><span class="line"><span class="string">&quot;先锋&quot;</span>,<span class="string">&quot;不如&quot;</span>,<span class="string">&quot;赶来&quot;</span>,<span class="string">&quot;此人&quot;</span>,<span class="string">&quot;夫人&quot;</span>,<span class="string">&quot;先主&quot;</span>,<span class="string">&quot;后人&quot;</span>,<span class="string">&quot;背后&quot;</span>,</span><br><span class="line"><span class="string">&quot;城中&quot;</span>,<span class="string">&quot;蜀兵&quot;</span>,<span class="string">&quot;上马&quot;</span>,<span class="string">&quot;大叫&quot;</span>,<span class="string">&quot;都督&quot;</span>,<span class="string">&quot;一人&quot;</span>,<span class="string">&quot;如何&quot;</span>,<span class="string">&quot;商议&quot;</span>,</span><br><span class="line"><span class="string">&quot;却说&quot;</span>,<span class="string">&quot;不可&quot;</span>,<span class="string">&quot;不能&quot;</span>,<span class="string">&quot;如此&quot;</span>,<span class="string">&quot;将军&quot;</span>,<span class="string">&quot;二人&quot;</span>,<span class="string">&quot;后主&quot;</span>,<span class="string">&quot;荆州&quot;</span>,</span><br><span class="line"><span class="string">&quot;如何&quot;</span>,<span class="string">&quot;主公&quot;</span>,<span class="string">&quot;军马&quot;</span>,<span class="string">&quot;军士&quot;</span>,<span class="string">&quot;左右&quot;</span>,<span class="string">&quot;正是&quot;</span>,<span class="string">&quot;徐州&quot;</span>,<span class="string">&quot;忽然&quot;</span>,</span><br><span class="line"><span class="string">&quot;因此&quot;</span>,<span class="string">&quot;成都&quot;</span>,<span class="string">&quot;未知&quot;</span>,<span class="string">&quot;不见&quot;</span>,<span class="string">&quot;大败&quot;</span>,<span class="string">&quot;大事&quot;</span>,<span class="string">&quot;之后&quot;</span>,<span class="string">&quot;一军&quot;</span>,</span><br><span class="line"><span class="string">&quot;起兵&quot;</span>,<span class="string">&quot;引军&quot;</span>,<span class="string">&quot;军中&quot;</span>,<span class="string">&quot;接应&quot;</span>,<span class="string">&quot;进兵&quot;</span>,<span class="string">&quot;大惊&quot;</span>,<span class="string">&quot;可以&quot;</span>,<span class="string">&quot;大怒&quot;</span>,</span><br><span class="line"><span class="string">&quot;不得&quot;</span>,<span class="string">&quot;以为&quot;</span>,<span class="string">&quot;心中&quot;</span>,<span class="string">&quot;一声&quot;</span>,<span class="string">&quot;下文&quot;</span>,<span class="string">&quot;曹兵&quot;</span>,<span class="string">&quot;追赶&quot;</span>&#125;</span><br><span class="line">counts =&#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> word == <span class="string">&quot;诸葛亮&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;孔明曰&quot;</span>:</span><br><span class="line">rword = <span class="string">&quot;孔明&quot;</span></span><br><span class="line"><span class="keyword">elif</span> word == <span class="string">&quot;玄德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;玄德曰&quot;</span>:</span><br><span class="line">rword = <span class="string">&quot;刘备&quot;</span></span><br><span class="line"><span class="keyword">elif</span> word == <span class="string">&quot;孟德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;丞相&quot;</span>:</span><br><span class="line">rword = <span class="string">&quot;曹操&quot;</span></span><br><span class="line"><span class="keyword">elif</span> word == <span class="string">&quot;关公&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;云长&quot;</span>:</span><br><span class="line">rword = <span class="string">&quot;关羽&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">rword = word</span><br><span class="line">counts[rword] = counts.get(rword,<span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> nowords:</span><br><span class="line"><span class="keyword">del</span>(counts[word])</span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse = <span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">word,count = items[i]</span><br><span class="line">print(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word,count))</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>编写程序，模拟抓狐狸小游戏。假设一共有一排 5 个洞口，小狐狸最开始的时候在其中一个洞口，然后玩家随机打开一个洞口，如果里面有狐狸就抓到了。如果洞口里没有狐狸就第二天再来抓， 但是第二天狐狸会在玩家来抓之前跳到隔壁洞口里。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> ran</span><br><span class="line"></span><br><span class="line">flag =ran.randint(<span class="number">0</span>,<span class="number">4</span>)</span><br><span class="line">tiao = [-<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">inp = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入 0-4 中任意一个数：&quot;</span>))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">&quot;输入格式有误，请重新输入！&quot;</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> inp &lt;<span class="number">0</span> <span class="keyword">or</span> inp &gt;<span class="number">4</span>:</span><br><span class="line">print(<span class="string">&quot;输入范围有误！&quot;</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> inp == flag:</span><br><span class="line">print(<span class="string">&quot;找到了，游戏结束！&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">flag += tiao[ran.randint(<span class="number">0</span>,<span class="number">1</span>)]</span><br><span class="line">flag %= <span class="number">5</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1、 培养分析问题并对进行建模的能力。&lt;br&gt;2、 熟练使用组合数据类型解决实际问题。&lt;br&gt;3、 熟练运用选择结构和循环结</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验五 组合数据类型</title>
    <link href="http://example.com/2021/04/05/python-experiment-5/"/>
    <id>http://example.com/2021/04/05/python-experiment-5/</id>
    <published>2021-04-05T09:34:20.000Z</published>
    <updated>2021-04-05T09:36:59.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1、理解组合数据类型的概念<br>2、掌握列表、字典与集合的定义和使用方法<br>3、熟练 random 模块的应用</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>编写程序，在 26 个字母大小写和 10 个数字组成的列表中随机生成 10个 8 位密码。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置的密码没有重复的元素</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">List =[]</span><br><span class="line"><span class="comment">#存入字母和数字</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">List.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>)+i))</span><br><span class="line">List.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>)+i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">List.append(<span class="built_in">str</span>(i))</span><br><span class="line"><span class="comment">#随机生成 10 个 8 位数的密码</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">password_List = random.sample(List,<span class="number">8</span>) <span class="comment">#生成结果仍为列表</span></span><br><span class="line">password = <span class="string">&quot;&quot;</span>.join(password_List) <span class="comment">#将列表转化成字符串</span></span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>通过键盘输入系列整数值，输入 0 则表示输入结束，将这些值（不含 0）建立为一个列表，并按从大到小的顺序输出该列表各元素。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">List = []</span><br><span class="line">num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line"><span class="keyword">while</span> num != <span class="number">0</span>:</span><br><span class="line">List.append(num)</span><br><span class="line">num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line">List.sort(reverse = <span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(List)):</span><br><span class="line">print(List[i])</span><br></pre></td></tr></table></figure><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p>输入一个大于 2 的自然数， 输出小于该数字的所有素数组成的集合。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isprime</span>(<span class="params">n</span>):</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line"><span class="keyword">if</span> n % i ==<span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">num_input = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个大于 2 的自然数：&quot;</span>))</span><br><span class="line">num = math.ceil(num_input)</span><br><span class="line">prime_set = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,num):</span><br><span class="line"><span class="keyword">if</span> isprime(i):</span><br><span class="line">prime_set.add(i)</span><br><span class="line">print(<span class="string">&quot;小于&#123;&#125;的所有素数集合是：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(num_input,prime_set))</span><br></pre></td></tr></table></figure><h2 id="练习四"><a href="#练习四" class="headerlink" title="练习四"></a>练习四</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>使用字典来创建程序，提示用户输入电话号码，并用英文单词形式显示数字。例如：输入 138 则显示“one three eight”。</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">num = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">word = [<span class="string">&quot;zero&quot;</span>,<span class="string">&quot;one&quot;</span>,<span class="string">&quot;two&quot;</span>,<span class="string">&quot;three&quot;</span>,<span class="string">&quot;four&quot;</span>,<span class="string">&quot;five&quot;</span>,<span class="string">&quot;six&quot;</span>,<span class="string">&quot;seven&quot;</span>,<span class="string">&quot;eight&quot;</span>,<span class="string">&quot;nine&quot;</span>]</span><br><span class="line">phone_list = <span class="built_in">dict</span>(<span class="built_in">zip</span>(num,word))</span><br><span class="line">phone_num = <span class="built_in">input</span>(<span class="string">&quot;请输入电话号码：&quot;</span>)</span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#print(phone_num)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> phone_num:</span><br><span class="line">phone_i = <span class="built_in">eval</span>(i)</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> phone_list:</span><br><span class="line"><span class="keyword">if</span> phone_i == key:</span><br><span class="line">result += phone_list[key] + <span class="string">&quot; &quot;</span></span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1、理解组合数据类型的概念&lt;br&gt;2、掌握列表、字典与集合的定义和使用方法&lt;br&gt;3、熟练 random 模块的应用&lt;/p&gt;</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验四 程序的控制结构（循环）</title>
    <link href="http://example.com/2021/04/05/python-experiment-4/"/>
    <id>http://example.com/2021/04/05/python-experiment-4/</id>
    <published>2021-04-05T09:31:53.000Z</published>
    <updated>2021-04-05T10:08:48.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1、掌握程序的几种循环结构及扩展用法<br>2、掌握 break 和 continue 的用法<br>3、掌握 random 库的用法<br>4、了解程序的异常处理及用法</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目：统计不同字符个数"><a href="#题目：统计不同字符个数" class="headerlink" title="题目：统计不同字符个数"></a>题目：统计不同字符个数</h3><p>用户从键盘输入一行字符，编写一个程序，统计并输出其中英文字符、数字、空格和其它字符的个数。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">charts = <span class="built_in">input</span>(<span class="string">&quot;请输入一行字符：&quot;</span>)</span><br><span class="line">english = num = space = other = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> charts:</span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;0&#x27;</span>&lt;= i &lt;= <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">num += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> (<span class="string">&#x27;a&#x27;</span> &lt;= i &lt;= <span class="string">&#x27;z&#x27;</span>) <span class="keyword">or</span> (<span class="string">&#x27;A&#x27;</span> &lt;= i &lt;=<span class="string">&#x27;Z&#x27;</span>):</span><br><span class="line">english += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> i == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">space += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">other += <span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;在你输入的字符串中：英文字符有&#123;&#125;个，数字有&#123;&#125;个，空格有&#123;&#125;个，其他字符有&#123;&#125;个&quot;</span>.<span class="built_in">format</span>(english,num,space,other))</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目：猜数游戏续"><a href="#题目：猜数游戏续" class="headerlink" title="题目：猜数游戏续"></a>题目：猜数游戏续</h3><p>在上一次猜游戏实验题目的基础上，完善程序，实现如下的功能：<br>系统自动生成 1-100 以内的随机整数，让用户通过键盘输入所猜的数，如果大于预设的数，显示“遗憾，太大了”；小于预设的数，显示“遗憾，太小了”，如此循环，直到猜中该数，显示“预测 N 次，你猜中了！”，其中 N 是用户输入的数字次数。如果用户输入的不是整数，而是小数，则提示用户“输入错误，必须输入整数！”，并让用户重新输入。如果用户输入的不是数字，则给出出错提示“输入格式错误，结束程序！”</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> rand;</span><br><span class="line">flag = rand.randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">num = <span class="built_in">input</span>(<span class="string">&quot;请输入你猜想的数：&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>: <span class="number">8.</span> num = <span class="built_in">eval</span>(num)</span><br><span class="line"><span class="keyword">if</span> num &lt; flag :</span><br><span class="line">print(<span class="string">&quot;遗憾，太小了！&quot;</span>)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> num &gt; flag:</span><br><span class="line">print(<span class="string">&quot;遗憾，太大了！&quot;</span>)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> num == flag:</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;预测&#123;&#125;次，你猜中了！&quot;</span>.<span class="built_in">format</span>(count))</span><br><span class="line">st = <span class="built_in">input</span>(<span class="string">&quot;是否继续游戏!\n 输入 1 继续，输入 0 结束：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">eval</span>(st)==<span class="number">1</span>:</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">flag =rand.randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">print(<span class="string">&quot;输入类型错误，请输入一个整数，程序执行完毕！&quot;</span>)</span><br><span class="line">exit()</span><br></pre></td></tr></table></figure><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目：最大公约数计算"><a href="#题目：最大公约数计算" class="headerlink" title="题目：最大公约数计算"></a>题目：最大公约数计算</h3><p>从键盘接收两个整数，编写程序求出这两个整数的最大公约数和最小公倍数（提示：用辗转相除法求最大公约数，用两数乘积除以最大公约数求得最小公倍数）</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">num1,num2 = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入两个整数(逗号隔开输入)：&quot;</span>))</span><br><span class="line">greatest_common_divisor = <span class="number">0</span></span><br><span class="line">least_common_multiple = <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Calculation</span>(<span class="params">a,b</span>):</span></span><br><span class="line"><span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"><span class="keyword">return</span> Calculation(b,a%b)</span><br><span class="line"><span class="keyword">if</span> num1 &lt; num2:</span><br><span class="line">temp = num1</span><br><span class="line">num1 = num2</span><br><span class="line">num2 = temp</span><br><span class="line">greatest_common_divisor = Calculation(num1,num2)</span><br><span class="line">least_common_multiple = num2 * num1 / greatest_common_divisor</span><br><span class="line">print(<span class="string">&quot; 两 数 的 最 大 公 约 数 为 &#123;&#125; ， 最 小 公 倍 数 为&#123;:.0f&#125;&quot;</span>.<span class="built_in">format</span>(greatest_common_divisor,least_common_multiple))</span><br></pre></td></tr></table></figure><h2 id="练习四"><a href="#练习四" class="headerlink" title="练习四"></a>练习四</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>请编写程序实现如下数字金字塔的显示：<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/202101120129343.png" alt="在这里插入图片描述"></p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">s = s + <span class="built_in">str</span>(i)</span><br><span class="line">left_part = s[::-<span class="number">1</span>]</span><br><span class="line">right_part = s[<span class="number">1</span>:]</span><br><span class="line">strs = left_part + right_part</span><br><span class="line">print(strs.center(<span class="number">17</span>,<span class="string">&quot; &quot;</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1、掌握程序的几种循环结构及扩展用法&lt;br&gt;2、掌握 break 和 continue 的用法&lt;br&gt;3、掌握 random</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验三 程序的控制结构（分支）</title>
    <link href="http://example.com/2021/04/05/python-experiment-3/"/>
    <id>http://example.com/2021/04/05/python-experiment-3/</id>
    <published>2021-04-05T09:28:55.000Z</published>
    <updated>2021-04-05T10:08:06.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1、掌握程序的单分支结构<br>2、掌握程序的双分支结构<br>3、掌握程序的多分支结构<br>4、掌握 if 的嵌套</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目：身体质量指数-BMI"><a href="#题目：身体质量指数-BMI" class="headerlink" title="题目：身体质量指数 BMI"></a>题目：身体质量指数 BMI</h3><p>BMI 值可以“客观的”衡量个人的肥胖程度或者说健康程度。世界卫生组织（WHO）根据对全球人口体重的统计认为，BMI 值低于 18.5 kg/m2 时属于“过轻”，表明个体可能营养不良或者饮食无法保障；BMI 值高于 25 kg/m2 时属于“过重”。根据下表所示指标编程测试自己的身体指数状况。<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112004903680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk0Nzk0Mw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">height ,weight = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入身高（米）和体重（公斤）[逗号隔开]：&quot;</span>))</span><br><span class="line">bmi = weight / <span class="built_in">pow</span>(height,<span class="number">2</span>)</span><br><span class="line">print(<span class="string">&quot;BMI 指数为：&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(bmi))</span><br><span class="line">who,dom=<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> bmi &lt; <span class="number">18.5</span>:</span><br><span class="line">who,dom = <span class="string">&quot;偏瘦&quot;</span>,<span class="string">&quot;偏瘦&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">18.5</span>&lt;= bmi &lt; <span class="number">24</span>:</span><br><span class="line">who, dom = <span class="string">&quot;正常&quot;</span>, <span class="string">&quot;正常&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">24</span>&lt;= bmi &lt; <span class="number">25</span>:</span><br><span class="line">who, dom = <span class="string">&quot;正常&quot;</span>, <span class="string">&quot;偏胖&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">25</span>&lt;= bmi &lt; <span class="number">28</span>:</span><br><span class="line">who, dom = <span class="string">&quot;偏胖&quot;</span>, <span class="string">&quot;偏胖&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">28</span>&lt;= bmi &lt; <span class="number">30</span>:</span><br><span class="line">who, dom = <span class="string">&quot;偏胖&quot;</span>, <span class="string">&quot;肥胖&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">who, dom = <span class="string">&quot;肥胖&quot;</span>, <span class="string">&quot;肥胖&quot;</span></span><br><span class="line">print(<span class="string">&quot;BMI 指标为：国际&#x27;&#123;0&#125;&#x27;，国内&#x27;&#123;1&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(who,dom))</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目：学生成绩等级判断"><a href="#题目：学生成绩等级判断" class="headerlink" title="题目：学生成绩等级判断"></a>题目：学生成绩等级判断</h3><p>编程实现输入学生成绩 score，得出其等级状况 grade,其对应关系如下：<br>100&gt;=Score&gt;=85 grade=”A”<br>70&lt;=Score&lt;85 grade=”B”<br>60&lt;=Score&lt;70 grade=”C”<br>0&lt;Score&lt;60 grade=”D”<br>Score&gt;100 或 Score&lt;0 给出出错提示</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">input</span>(<span class="string">&quot;请输入你的成绩：&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">score = <span class="built_in">eval</span>(score)</span><br><span class="line"><span class="keyword">if</span> score &lt; <span class="number">0</span> <span class="keyword">or</span> score &gt; <span class="number">100</span>: <span class="number">5.</span> print(<span class="string">&quot;成绩输入有误，请重新输入&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> <span class="number">0</span> &lt;= score &lt; <span class="number">60</span>:</span><br><span class="line">grade = <span class="string">&quot;D&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">60</span> &lt;= score &lt; <span class="number">70</span>:</span><br><span class="line">grade = <span class="string">&quot;C&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">70</span> &lt;= score &lt; <span class="number">85</span>:</span><br><span class="line">grade = <span class="string">&quot;B&quot;</span></span><br><span class="line"><span class="keyword">elif</span> <span class="number">85</span> &lt;= score &lt;= <span class="number">100</span>:</span><br><span class="line">grade = <span class="string">&quot;A&quot;</span> <span class="number">15.</span> print(<span class="string">&quot;你的成绩属于&#123;&#125;级别&quot;</span>.<span class="built_in">format</span>(grade))</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">print(<span class="string">&quot;输入错误，请输入一个整数！&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目：猜数游戏"><a href="#题目：猜数游戏" class="headerlink" title="题目：猜数游戏"></a>题目：猜数游戏</h3><p>在程序中预设一个 0-9 之间的整数，让用户通过键盘输入所猜的数，如果大于预设的数，显示“遗憾，太大了”；小于预设的数，显示“遗憾，太小了”，如此循环，直到猜中该数，显示“预测 N 次，你猜中了！”，其中 N 是用户输入的数字次数。</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> rand;</span><br><span class="line">flag = rand.randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">num = <span class="built_in">input</span>(<span class="string">&quot;请输入你猜想的数：&quot;</span>)</span><br><span class="line"><span class="keyword">try</span>: <span class="number">8.</span> num = <span class="built_in">eval</span>(num)</span><br><span class="line"><span class="keyword">if</span> num &lt; flag :</span><br><span class="line">print(<span class="string">&quot;遗憾，太小了！&quot;</span>)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> num &gt; flag:</span><br><span class="line">print(<span class="string">&quot;遗憾，太大了！&quot;</span>)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> num == flag:</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;预测&#123;&#125;次，你猜中了！&quot;</span>.<span class="built_in">format</span>(count))</span><br><span class="line">st = <span class="built_in">input</span>(<span class="string">&quot;是否继续游戏!\n 输入 1 继续，输入 0 结束：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">eval</span>(st)==<span class="number">1</span>:</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">flag =rand.randint(<span class="number">0</span>,<span class="number">9</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">    print(<span class="string">&quot;输入类型错误，请输入一个整数，程序执行完毕！&quot;</span>)</span><br><span class="line">    exit()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1、掌握程序的单分支结构&lt;br&gt;2、掌握程序的双分支结构&lt;br&gt;3、掌握程序的多分支结构&lt;br&gt;4、掌握 if 的嵌套&lt;/p</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验二 字符串及基本数据类型操作</title>
    <link href="http://example.com/2021/04/05/python-experiment-2/"/>
    <id>http://example.com/2021/04/05/python-experiment-2/</id>
    <published>2021-04-05T09:26:04.000Z</published>
    <updated>2021-04-05T10:07:40.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>1．掌握字符串编码、索引方式<br>2．掌握字符串的操作<br>3．掌握字符串格式化<br>4．掌握基本数据类型的运算操作</p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>完成以下代码练习，熟悉字符串的相关使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>输出由任意字符串堆积的 10 行等腰三角形。其中，str.center()方法用于字符串两边填充：str.rjust(width[,fillchar])方法用于字符串右填充。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">width = <span class="number">2</span>*<span class="number">10</span>-<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="built_in">str</span> = <span class="string">&#x27;*&#x27;</span>*(<span class="number">2</span>*i-<span class="number">1</span>)</span><br><span class="line">    print(<span class="built_in">str</span>.center(width,<span class="string">&#x27; &#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112003942446.png" alt="练习二"></p><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p>能力值的计算：一年 365 天，以第 1 天的能力值为基数，记为 1.0，当每天好好学习时能力值相比前一天提高 1‰，当没有学习时由于遗忘等原因能力值相比前一天下降 1‰，完成下列能力值的计算：<br>(1) 每天努力和每天放任，一年下来的能力值分别多少？<br>(2) 一周 5 个工作日，如果每个工作日都好好学习，在周末放任一下，计算 1 年后的能力值。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#（1）</span></span><br><span class="line">dayfactor = <span class="number">0.0001</span></span><br><span class="line">dayup = <span class="built_in">pow</span>(<span class="number">1</span>+dayfactor,<span class="number">365</span>)</span><br><span class="line">daydown = <span class="built_in">pow</span>(<span class="number">1</span>-dayfactor,<span class="number">365</span>)</span><br><span class="line">print(<span class="string">&quot;每天努力：&#123;:.3f&#125;,每天放任：&#123;:.3f&#125;&quot;</span>.<span class="built_in">format</span>(dayup,daydown))</span><br><span class="line"></span><br><span class="line"><span class="comment">#（2）</span></span><br><span class="line">dayfactor = <span class="number">0.0001</span></span><br><span class="line">dayup = <span class="number">1.0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">365</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">7</span> <span class="keyword">in</span> [<span class="number">6</span>,<span class="number">0</span>]:</span><br><span class="line">        dayup = dayup*(<span class="number">1</span>-dayfactor)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        dayup = dayup*(<span class="number">1</span>+dayfactor)</span><br><span class="line">print(<span class="string">&quot;1年后的能力值&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(dayup))</span><br></pre></td></tr></table></figure><h2 id="练习四"><a href="#练习四" class="headerlink" title="练习四"></a>练习四</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>凯撒密码：设想在某些情况下给朋友传递字条信息，但又不希望传递中途被第三方看懂这些信息，因此需要对字条信息进行加密处理。凯撒密码采用了替换算法对信息中的每一个英文字符循环替换为该字符后面第三个字符，对应关系如下：<br>原文：A B C D E F G H I J K L M N O P Q R S T U V W X Y Z<br>密文：D E F G H I J K L M N O P Q R S T U V W X Y Z A B C<br>其它字符保持不变。<br>编程实现：程序接收用户输入待加密的信息，输出加密后的密文。</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">enter_code = <span class="built_in">input</span>(<span class="string">&quot;请输入一段信息：&quot;</span>)</span><br><span class="line">encode = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class="line">output_code = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> enter_code:</span><br><span class="line">    <span class="keyword">if</span> c <span class="keyword">in</span> enter_code:</span><br><span class="line">        index = encode.index(c)</span><br><span class="line">        index += <span class="number">3</span></span><br><span class="line">        index %= <span class="built_in">len</span>(encode)</span><br><span class="line">        output_code += encode[index]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        output_code += c</span><br><span class="line">print(<span class="string">&quot;加密后的密文为：&quot;</span>,output_code)</span><br></pre></td></tr></table></figure><h2 id="练习五"><a href="#练习五" class="headerlink" title="练习五"></a>练习五</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p>文本进度条：参考教材，使用字符串完成进度条的设计。要求：<br>(1) 显示当前进度的百分比；<br>(2) 动态刷新显示当前的进度。</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">scale = <span class="number">50</span></span><br><span class="line">print(<span class="string">&quot;执行开始&quot;</span>.center(scale//<span class="number">2</span>,<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">t = time.clock()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale+<span class="number">1</span>):</span><br><span class="line">    a = <span class="string">&#x27;*&#x27;</span> * i</span><br><span class="line">    b = <span class="string">&#x27;.&#x27;</span> * (scale-i)</span><br><span class="line">    c = (i/scale) * <span class="number">100</span></span><br><span class="line">    t -= time.clock()</span><br><span class="line">    print(<span class="string">&quot;\r&#123;:^.3f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#123;:.2f&#125;s&quot;</span>.<span class="built_in">format</span>(c,a,b,-t),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.05</span>)</span><br><span class="line">print(<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;执行结束&quot;</span>.center(scale//<span class="number">2</span>,<span class="string">&#x27;-&#x27;</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;p&gt;1．掌握字符串编码、索引方式&lt;br&gt;2．掌握字符串的操作&lt;br&gt;3．掌握字符串格式化&lt;br&gt;4．掌握基本数据类型的运算操作&lt;</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 实验一 Python运行环境搭建及使用</title>
    <link href="http://example.com/2021/04/05/python-experiment-1/"/>
    <id>http://example.com/2021/04/05/python-experiment-1/</id>
    <published>2021-04-05T07:51:52.000Z</published>
    <updated>2021-04-05T10:07:13.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><ol><li>熟悉 Python 开发环境的使用</li><li>熟悉 Python 应用程序的创建与运行</li><li>掌握 Python 输入与输出<h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="练习一"><a href="#练习一" class="headerlink" title="练习一"></a>练习一</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3>分别用交互模式和批量模式完成以下代码的练习。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1=<span class="built_in">input</span>(<span class="string">&quot;请输入一个人的名字：&quot;</span>)</span><br><span class="line">str2=<span class="built_in">input</span>(<span class="string">&quot;请输入一个国家的名字：&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;世界这么大，&#123;&#125;想去&#123;&#125;看看&quot;</span>.<span class="built_in">format</span>(str1,str2))</span><br></pre></td></tr></table></figure><h2 id="练习二"><a href="#练习二" class="headerlink" title="练习二"></a>练习二</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3>整数序列求和：用户输入一个正整数 N,计算从 1 到 N(包含 1 和 N)相加之后的结果。<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N = <span class="built_in">input</span>(<span class="string">&quot;请输入一个正整数N：&quot;</span>)</span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="built_in">int</span>(N)):</span><br><span class="line">    <span class="built_in">sum</span> += i + <span class="number">1</span></span><br><span class="line">print(<span class="string">&quot;1到N相加后的结果为：&quot;</span>,<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><h2 id="练习三"><a href="#练习三" class="headerlink" title="练习三"></a>练习三</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3>健康食谱输出：列出 5 种不同的食材，输出它们可能组成的所有菜式名称。<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array = [<span class="string">&#x27;土豆&#x27;</span>,<span class="string">&#x27;豇豆&#x27;</span>,<span class="string">&#x27;辣椒&#x27;</span>,<span class="string">&#x27;五花肉&#x27;</span>,<span class="string">&#x27;豆腐&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(i==j):</span><br><span class="line">            print(<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(array[i],array[j]))</span><br></pre></td></tr></table></figure><h2 id="练习四"><a href="#练习四" class="headerlink" title="练习四"></a>练习四</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3>太阳花的绘制：使用 turtle 库绘制一个太阳花的图形，如下图所示。<br>￼<img lazyload src="/images/loading.svg" data-src="https://img-blog.csdnimg.cn/20210112002138847.png" alt="在这里插入图片描述"><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line">color(<span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">begin_fill()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    forward(<span class="number">200</span>)</span><br><span class="line">    left(<span class="number">170</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(pos())&lt;<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">end_fill()</span><br><span class="line">done()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;熟悉 Python 开发环境的使用&lt;/li&gt;
&lt;li&gt;熟悉 Python 应用程序的创建与运行&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="experiment" scheme="http://example.com/categories/experiment/"/>
    
    
    <category term="experiment" scheme="http://example.com/tags/experiment/"/>
    
    <category term="python-experiment" scheme="http://example.com/tags/python-experiment/"/>
    
  </entry>
  
  <entry>
    <title>Python 学习笔记（六）</title>
    <link href="http://example.com/2021/04/05/python-study-notes-6/"/>
    <id>http://example.com/2021/04/05/python-study-notes-6/</id>
    <published>2021-04-05T06:59:54.000Z</published>
    <updated>2021-04-05T07:47:25.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="文件概述"><a href="#文件概述" class="headerlink" title="文件概述"></a>文件概述</h2><h3 id="定义和分类"><a href="#定义和分类" class="headerlink" title="定义和分类"></a>定义和分类</h3><ul><li>定义：文件是一个存储在辅助存储器上的数据序列，可以包含任何数据内容。</li><li>概念上:文件是数据的集合和抽象。</li><li>优点：组织和表达数据更有效、更灵活。</li><li>分类：文本文件和二进制文件。</li></ul><h4 id="文本文件和二进制文件"><a href="#文本文件和二进制文件" class="headerlink" title="文本文件和二进制文件"></a>文本文件和二进制文件</h4><table><thead><tr><th align="center">比较项</th><th align="center">文本文件</th><th align="center">二进制文件</th></tr></thead><tbody><tr><td align="center">定义</td><td align="center">由文本字符为内容的文件</td><td align="center">直接由比特0和1组成</td></tr><tr><td align="center">字符编码</td><td align="center">是</td><td align="center">否</td></tr><tr><td align="center">读取方式</td><td align="center">文件经编码形成字符串，打印出含有意义的字符</td><td align="center">文件被解析为字节（比特）流</td></tr><tr><td align="center">表示形式</td><td align="center">一个字符由2个字节表示</td><td align="center">单一字节表示</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">textFile = <span class="built_in">open</span>(<span class="string">&quot;7.1.txt&quot;</span>,<span class="string">&quot;rt&quot;</span>) <span class="comment">#t表示文本文件方式</span></span><br><span class="line">print(textFile.readline())</span><br><span class="line">textFile.close()</span><br><span class="line">binFile = <span class="built_in">open</span>(<span class="string">&quot;7-1.txt&quot;</span>,<span class="string">&quot;rb&quot;</span>)<span class="comment">#r表示二进制文件方式</span></span><br><span class="line">print(binFile.readline())</span><br><span class="line">binFile.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;</span><br><span class="line">中国是个伟大的国家！ </span><br><span class="line"><span class="string">b&#x27;\xd6\xd0\xb9\xfa\xca\xc7\xb8\xf6\xce\xb0\xb4\xf3\xb5\xc4\xb9\xfa\xbc\xd2\xa3\xa1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="文件操作-1"><a href="#文件操作-1" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="文件打开和关闭"><a href="#文件打开和关闭" class="headerlink" title="文件打开和关闭"></a>文件打开和关闭</h3><ul><li>文件打开函数: open()</li><li>表示方法：<ul><li>&lt;变量名&gt; = open(&lt;文件名&gt;, &lt;打开模式&gt;)</li><li>文件名可以是文件的实际名字，也可以是包含完整路径的名字。</li></ul></li><li>打开模式举例：</li></ul><table><thead><tr><th align="center">打开模式</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">‘r’</td><td align="center">只读模式，如果文件不存在，返回异常FileNotFoundError，默认值</td></tr><tr><td align="center">‘w’</td><td align="center">覆盖写模式，文件不存在则创建，存在则完全覆盖源文件</td></tr><tr><td align="center">‘x’</td><td align="center">创建写模式，文件不存在则创建，存在则返回异常FileExistsError</td></tr><tr><td align="center">‘a’</td><td align="center">追加写模式，文件不存在则创建，存在则在原文件最后追加内容</td></tr><tr><td align="center">‘b’</td><td align="center">二进制文件模式</td></tr><tr><td align="center">‘t’</td><td align="center">文本文件模式，默认值</td></tr><tr><td align="center">‘+’</td><td align="center">与r/w/x/a一同使用，在原功能基础上增加同时读写功能</td></tr></tbody></table><h3 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h3><p>定义a为一文件：</p><ul><li>文件读取：</li></ul><table><thead><tr><th align="center">方法</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">a.readall()</td><td align="center">读入整个文件内容，返回一个字符串或字节流*</td></tr><tr><td align="center">a.read(size=-1)</td><td align="center">从文件中读入整个文件内容，如果给出参数，读入前size长度的字符串或字节流</td></tr><tr><td align="center">a.readline(size = -1)</td><td align="center">从文件中读入一行内容，如果给出参数，读入该行前size长度的字符串或字节流</td></tr><tr><td align="center">a.readlines(hint=-1)</td><td align="center">从文件中读入所有行，以每行为元素形成一个列表，如果给出参数，读入hint行</td></tr></tbody></table><ul><li>文件写入：</li></ul><table><thead><tr><th align="center">方法</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">a.write(s)</td><td align="center">向文件写入一个字符串或字节流</td></tr><tr><td align="center">a.writelines(lines)</td><td align="center">将一个元素为字符串的列表写入文件</td></tr><tr><td align="center">a.seek(offset)</td><td align="center">改变当前文件操作指针的位置，offset的值： 0：文件开头； 1: 当前位置； 2: 文件结尾</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;文件操作&quot;&gt;&lt;a href=&quot;#文件操作&quot; class=&quot;headerlink&quot; title=&quot;文件操作&quot;&gt;&lt;/a&gt;文件操作&lt;/h1&gt;&lt;h2 id=&quot;文件概述&quot;&gt;&lt;a href=&quot;#文件概述&quot; class=&quot;headerlink&quot; title=&quot;文件概述&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="study-notes" scheme="http://example.com/tags/study-notes/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记（五）</title>
    <link href="http://example.com/2021/04/03/python-study-notes-5/"/>
    <id>http://example.com/2021/04/03/python-study-notes-5/</id>
    <published>2021-04-03T13:02:02.000Z</published>
    <updated>2021-04-05T06:56:58.720Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组合数据类型"><a href="#组合数据类型" class="headerlink" title="组合数据类型"></a>组合数据类型</h1><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><h3 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h3><ul><li>定义：包含0个或多个数据项的无序组合</li><li>特点：<ul><li>元素之间无序，每个元素唯一，不存在相同元素</li><li>元素不可更改，不能是可变数据类型</li><li>用大括号 {} 表示，元素间用逗号分隔</li></ul></li><li>创建方式：建立集合类型用 {} 或 set()</li><li>tips：空集合必须用set()创建<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = &#123;<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, (<span class="string">&quot;python&quot;</span>,<span class="number">123</span>)&#125;</span><br><span class="line">&#123;<span class="number">123</span>, <span class="string">&#x27;python&#x27;</span>, (<span class="string">&#x27;python&#x27;</span>, <span class="number">123</span>)&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B = <span class="built_in">set</span>(<span class="string">&quot;pypy123&quot;</span>)</span><br><span class="line">&#123;<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>C = &#123;<span class="string">&quot;python&quot;</span>, <span class="number">123</span>, <span class="string">&quot;python&quot;</span>,<span class="number">123</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;python&#x27;</span>, <span class="number">123</span>&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="集合间操作"><a href="#集合间操作" class="headerlink" title="集合间操作"></a>集合间操作</h3><table><thead><tr><th align="center">操作符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">S</td><td align="center">T</td></tr><tr><td align="center">S - T</td><td align="center">返回一个新集合，包括在集合S但不在T中的元素</td></tr><tr><td align="center">S &amp; T</td><td align="center">返回一个新集合，包括同时在集合S和T中的元素</td></tr><tr><td align="center">S ^ T</td><td align="center">返回一个新集合，包括集合S和T中的非相同元素</td></tr><tr><td align="center">S &lt;= T 或 S &lt; T</td><td align="center">返回True/False，判断S和T的子集关系</td></tr><tr><td align="center">s &gt;= T 或 S &gt; T</td><td align="center">返回True/False，判断S和T的包含关系</td></tr><tr><td align="center">S -= T</td><td align="center">更新集合S，包括在集合S但不在T中的元素</td></tr><tr><td align="center">S &amp;= T</td><td align="center">更新集合S，包括同时在集合S和T中的元素</td></tr><tr><td align="center">S ^= T</td><td align="center">更新集合S，包括集合S和T中的非相同元素</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B = <span class="built_in">set</span>(<span class="string">&quot;pypy123&quot;</span>)</span><br><span class="line"><span class="comment">#并运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A|B</span><br><span class="line">&#123;<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="number">123</span>&#125;</span><br><span class="line"><span class="comment">#交运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A&amp;B</span><br><span class="line">&#123;<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#非相同元素</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A^B</span><br><span class="line">&#123;<span class="string">&#x27;2&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#差运算</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A-B</span><br><span class="line">&#123;<span class="number">123</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B-A</span><br><span class="line">&#123;<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="集合处理方法"><a href="#集合处理方法" class="headerlink" title="集合处理方法"></a>集合处理方法</h3><table><thead><tr><th align="center">操作函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">S.add(x)</td><td align="center">如果x不在集合S中，将x增加到S</td></tr><tr><td align="center">S.discard(x)</td><td align="center">移除S中元素x，如果x不在集合S中，不报错</td></tr><tr><td align="center">S.remove(x)</td><td align="center">移除S中元素x，如果x不在集合S中，产生KeyError异常</td></tr><tr><td align="center">S.clear()</td><td align="center">移除S中所有元素</td></tr><tr><td align="center">S.pop()</td><td align="center">随机返回S的一个元素，更新S，若S为空产生KeyError异常</td></tr><tr><td align="center">S.copy()</td><td align="center">返回集合S的一个副本</td></tr><tr><td align="center">len(S)</td><td align="center">返回集合S的元素个数</td></tr><tr><td align="center">x in S</td><td align="center">判断S中元素x，x在集合S中，返回True，否则返回False</td></tr><tr><td align="center">x not in S</td><td align="center">判断S中元素x，x不在集合S中，返回False，否则返回True</td></tr><tr><td align="center">set(x)</td><td align="center">将其他类型变量x转变为集合类型</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> item <span class="keyword">in</span> A:</span><br><span class="line">        print(item, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">p123y</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A</span><br><span class="line">&#123;<span class="string">&#x27;p&#x27;</span>, <span class="number">123</span>, <span class="string">&#x27;y&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            print(A.pop(), end=<span class="string">&quot;&quot;</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">p123y</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A</span><br><span class="line"><span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>包含关系比较：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;p&quot;</span> <span class="keyword">in</span> &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span>&#125; &gt;= &#123;<span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span> , <span class="number">123</span>&#125;</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure></li><li>数据去重：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;p&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="number">123</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="built_in">set</span>(ls)</span><br><span class="line">&#123;<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">123</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt = <span class="built_in">list</span>(s) [<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">123</span>]</span><br></pre></td></tr></table></figure></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>集合使用{}和set()函数创建</li><li>集合间操作：交(&amp;)、并(|)、差(-)、补(^)、比较(&gt;=&lt;)</li><li>集合类型方法：.add()、.discard()、.pop()等</li><li>集合类型主要应用于：包含关系比较、数据去重</li></ul><h2 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h2><h3 id="序列类型及操作"><a href="#序列类型及操作" class="headerlink" title="序列类型及操作"></a>序列类型及操作</h3><h4 id="序列类型定义"><a href="#序列类型定义" class="headerlink" title="序列类型定义"></a>序列类型定义</h4><ul><li>序列是具有先后关系的一组元素。</li><li>tips：<ul><li>序列是一维元素向量，元素类型可以不同</li><li>类似数学元素序列： s0, s1,    … ,    sn-1</li><li>元素间由序号引导，通过下标访问序列的特定元素</li></ul></li><li>序列是一个基类类型包括：<ul><li>字符串类型</li><li>元组类型</li><li>列表类型</li></ul></li></ul><h4 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h4><table><thead><tr><th align="center">操作符及应用</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">x in s</td><td align="center">如果x是序列s的元素，返回True，否则返回False</td></tr><tr><td align="center">x not in s</td><td align="center">如果x是序列s的元素，返回False，否则返回True</td></tr><tr><td align="center">s + t</td><td align="center">连接两个序列s和t</td></tr><tr><td align="center">s * n 或 n * s</td><td align="center">将序列s复制n次</td></tr><tr><td align="center">s[i]</td><td align="center">索引，返回s中的第i个元素，i是序列的序号</td></tr><tr><td align="center">s[i: j] 或 s[i: j: k]</td><td align="center">切片，返回序列s中第i到j以k为步长的元素子序列</td></tr></tbody></table><h4 id="函数和方法"><a href="#函数和方法" class="headerlink" title="函数和方法"></a>函数和方法</h4><table><thead><tr><th align="center">函数和方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">len(s)</td><td align="center">返回序列s的长度</td></tr><tr><td align="center">min(s)</td><td align="center">返回序列s的最小元素，s中元素需要可比较</td></tr><tr><td align="center">max(s)</td><td align="center">返回序列s的最大元素，s中元素需要可比较</td></tr><tr><td align="center">s.index(x) 或 s.index(x, i, j)</td><td align="center">返回序列s从i开始到j位置中第一次出现元素x的位置</td></tr><tr><td align="center">s.count(x)</td><td align="center">返回序列s中出现x的总次数</td></tr></tbody></table><h3 id="元组类型"><a href="#元组类型" class="headerlink" title="元组类型"></a>元组类型</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>元组是序列类型的一种扩展</li><li>元组是一种序列类型，一旦创建就不能被修改</li><li>使用小括号 () 或 tuple() 创建，元素间用逗号 , 分隔</li><li>可以使用或不使用小括号</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature = <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="string">&quot;human&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>creature</span><br><span class="line">(<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>color = (<span class="number">0x001100</span>,<span class="string">&quot;blue&quot;</span>, creature)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>color</span><br><span class="line">(<span class="number">4352</span>, <span class="string">&#x27;blue&#x27;</span>, (<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul><li>元组继承了序列类型的全部通用操作</li><li>元组因为创建后不能修改，因此没有特殊操作</li><li>使用或不使用小括号</li></ul><h3 id="列表类型"><a href="#列表类型" class="headerlink" title="列表类型"></a>列表类型</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><ul><li>列表是一种序列类型，创建后可以随意被修改</li><li>使用方括号 [] 或list() 创建，元素间用逗号 , 分隔</li><li>列表中各元素类型可以不同，无长度限制</li></ul><h4 id="操作函数和方法"><a href="#操作函数和方法" class="headerlink" title="操作函数和方法"></a>操作函数和方法</h4><table><thead><tr><th align="center">函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ls[i] = x</td><td align="center">替换列表ls第i元素为x</td></tr><tr><td align="center">ls[i: j: k] = lt</td><td align="center">用列表lt替换ls切片后所对应元素子列表</td></tr><tr><td align="center">del ls[i]</td><td align="center">删除列表ls中第i元素</td></tr><tr><td align="center">del ls[i: j: k]</td><td align="center">删除列表ls中第i到第j以k为步长的元素</td></tr><tr><td align="center">ls += lt</td><td align="center">更新列表ls，将列表lt元素增加到列表ls中</td></tr><tr><td align="center">ls *= n</td><td align="center">更新列表ls，其元素重复n次</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls[<span class="number">1</span>:<span class="number">2</span>] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> ls[::<span class="number">3</span>] </span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls*<span class="number">2</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="string">&#x27;tiger&#x27;</span>]</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">ls.append(x)</td><td align="center">在列表ls最后增加一个元素x</td></tr><tr><td align="center">ls.clear()</td><td align="center">删除列表ls中所有元素</td></tr><tr><td align="center">ls.copy()</td><td align="center">生成一个新列表，赋值ls中所有元素</td></tr><tr><td align="center">ls.insert(i,x)</td><td align="center">在列表ls的第i位置增加元素x</td></tr><tr><td align="center">ls.pop(i)</td><td align="center">将列表ls中第i位置元素取出并删除该元素</td></tr><tr><td align="center">ls.remove(x)</td><td align="center">将列表ls中出现的第一个元素x删除</td></tr><tr><td align="center">ls.reverse()</td><td align="center">将列表ls中的元素反转</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.append(<span class="number">1234</span>)</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>, <span class="number">1234</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.insert(<span class="number">3</span>, <span class="string">&quot;human&quot;</span>)</span><br><span class="line">[<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;human&#x27;</span>, <span class="number">1024</span>, <span class="number">1234</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls.reverse()</span><br><span class="line">[<span class="number">1234</span>, <span class="number">1024</span>, <span class="string">&#x27;human&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h3><ul><li>元组用于元素不改变的应用场景，更多用于固定搭配场景</li><li>列表更加灵活，它是最常用的序列类型</li><li>最主要作用：表示一组有序数据，进而操作它们</li><li>元素遍历:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> ls :</span><br><span class="line">    &lt;语句块&gt;</span><br></pre></td></tr></table></figure></li><li>数据保护：如果不希望数据被程序所改变，转换成元组类型<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>ls = [<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;tiger&quot;</span>, <span class="number">1024</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt = <span class="built_in">tuple</span>(ls)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>lt</span><br><span class="line">(<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;tiger&#x27;</span>, <span class="number">1024</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>序列是基类类型，扩展类型包括：字符串、元组和列表</li><li>元组用()和tuple()创建，列表用[]创建</li><li>元组操作与序列操作基本相同</li><li>列表操作在序列操作基础上，增加了更多的灵活性</li></ul><h2 id="字典类型"><a href="#字典类型" class="headerlink" title="字典类型"></a>字典类型</h2><h3 id="字典类型定义"><a href="#字典类型定义" class="headerlink" title="字典类型定义"></a>字典类型定义</h3><ul><li>字典类型是“映射的体现”</li><li>键值对：键是数据索引的扩展</li><li>字典是键值对的集合，键值对之间无序</li><li>采用大括号{}和dict()创建，键值对用冒号表示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">&#x27;中国&#x27;</span>: <span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>: <span class="string">&#x27;华盛顿&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>: <span class="string">&#x27;巴黎&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d[<span class="string">&quot;中国&quot;</span>]</span><br><span class="line"><span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>de = &#123;&#125; </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(de)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">dict</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字典类型操作方法"><a href="#字典类型操作方法" class="headerlink" title="字典类型操作方法"></a>字典类型操作方法</h3><table><thead><tr><th align="center">函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">del d[k]</td><td align="center">删除字典d中键k对应的数据值</td></tr><tr><td align="center">k in d</td><td align="center">判断键k是否在字典d中，如果在返回True，否则False</td></tr><tr><td align="center">d.keys()</td><td align="center">返回字典d中所有的键信息</td></tr><tr><td align="center">d.values()</td><td align="center">返回字典d中所有的值信息</td></tr><tr><td align="center">d.items()</td><td align="center">返回字典d中所有的键值对信息，以元组形式返回</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;中国&quot;</span> <span class="keyword">in</span> d</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.keys()</span><br><span class="line">dict_keys([<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;法国&#x27;</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.values()</span><br><span class="line">dict_values([<span class="string">&#x27;北京&#x27;</span>, <span class="string">&#x27;华盛顿&#x27;</span>, <span class="string">&#x27;巴黎&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="字典类型操作函数和方法"><a href="#字典类型操作函数和方法" class="headerlink" title="字典类型操作函数和方法"></a>字典类型操作函数和方法</h3><table><thead><tr><th align="center">函数或方法</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">d.get(k, <default>)</default></td><td align="center">键k存在，则返回相应值，不在则返回<default>值</default></td></tr><tr><td align="center">d.pop(k, <default>)</default></td><td align="center">键k存在，则取出相应值，不在则返回<default>值</default></td></tr><tr><td align="center">d.popitem()</td><td align="center">随机从字典d中取出一个键值对，以元组形式返回</td></tr><tr><td align="center">d.clear()</td><td align="center">删除所有的键值对</td></tr><tr><td align="center">len(d)</td><td align="center">返回字典d中元素的个数</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">&quot;中国&quot;</span>:<span class="string">&quot;北京&quot;</span>, <span class="string">&quot;美国&quot;</span>:<span class="string">&quot;华盛顿&quot;</span>, <span class="string">&quot;法国&quot;</span>:<span class="string">&quot;巴黎&quot;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&quot;中国&quot;</span>,<span class="string">&quot;伊斯兰堡&quot;</span>)</span><br><span class="line"><span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.get(<span class="string">&quot;巴基斯坦&quot;</span>,<span class="string">&quot;伊斯兰堡&quot;</span>)</span><br><span class="line"><span class="string">&#x27;伊斯兰堡&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.popitem()</span><br><span class="line">(<span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;华盛顿&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><ul><li>映射关系采用键值对表达</li><li>字典类型使用{}和dict()创建，键值对之间用 : 分隔</li><li>d[key] 方式既可以索引，也可以赋值</li><li>字典类型有一批操作方法和函数，例如.get()</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;组合数据类型&quot;&gt;&lt;a href=&quot;#组合数据类型&quot; class=&quot;headerlink&quot; title=&quot;组合数据类型&quot;&gt;&lt;/a&gt;组合数据类型&lt;/h1&gt;&lt;h2 id=&quot;集合&quot;&gt;&lt;a href=&quot;#集合&quot; class=&quot;headerlink&quot; title=&quot;集合&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="python" scheme="http://example.com/categories/python/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="study-notes" scheme="http://example.com/tags/study-notes/"/>
    
  </entry>
  
</feed>
